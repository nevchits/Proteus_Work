;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 25-Apr-14 07:29:42
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0xF003EF17  	GOTO        1582
_interrupt:
;Boom_controller.c,171 :: 		void interrupt()
0x0008	0xF015C000  	MOVFF       R0, 21
;Boom_controller.c,173 :: 		if (TMR0IF_bit)
0x000C	0xA4F2      	BTFSS       TMR0IF_bit, 2 
0x000E	0xD00D      	BRA         L_interrupt43
;Boom_controller.c,174 :: 		{TMR0IF_bit = 0;
0x0010	0x94F2      	BCF         TMR0IF_bit, 2 
;Boom_controller.c,175 :: 		proc_timer++;
0x0012	0x0100      	MOVLB       0
0x0014	0x4BDA      	INFSNZ      _proc_timer, 1, 1
0x0016	0x2BDB      	INCF        _proc_timer+1, 1, 1
;Boom_controller.c,176 :: 		if (proc_timer == 1953)
0x0018	0x51DB      	MOVF        _proc_timer+1, 0, 1
0x001A	0x0A07      	XORLW       7
0x001C	0xE102      	BNZ         L__interrupt63
0x001E	0x0EA1      	MOVLW       161
0x0020	0x19DA      	XORWF       _proc_timer, 0, 1
L__interrupt63:
0x0022	0xE103      	BNZ         L_interrupt44
;Boom_controller.c,178 :: 		RB7_bit=~RB7_bit;
0x0024	0x7E81      	BTG         RB7_bit, 7 
;Boom_controller.c,179 :: 		proc_timer = 0;
0x0026	0x6BDA      	CLRF        _proc_timer, 1
0x0028	0x6BDB      	CLRF        _proc_timer+1, 1
;Boom_controller.c,180 :: 		}
L_interrupt44:
;Boom_controller.c,181 :: 		}//if
L_interrupt43:
;Boom_controller.c,183 :: 		if (INT2IF_Bit) {
0x002A	0xA2F0      	BTFSS       INT2IF_bit, 1 
0x002C	0xD003      	BRA         L_interrupt45
;Boom_controller.c,184 :: 		INT2IF_bit = 0;
0x002E	0x0100      	MOVLB       0
0x0030	0x92F0      	BCF         INT2IF_bit, 1 
;Boom_controller.c,185 :: 		car_bridge_flag = ~car_bridge_flag;
0x0032	0x79D9      	BTG         _car_bridge_flag, BitPos(_car_bridge_flag+0), 1
;Boom_controller.c,186 :: 		}//if
L_interrupt45:
;Boom_controller.c,187 :: 		}
L__interrupt62:
0x0034	0xF000C015  	MOVFF       21, R0
0x0038	0x0011      	RETFIE      1
; end of _interrupt
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x003A	0x0E10      	MOVLW       16
0x003C	0x6E0D      	MOVWF       R13, 0
L_Delay_50us2:
0x003E	0x2E0D      	DECFSZ      R13, 1, 0
0x0040	0xD7FE      	BRA         L_Delay_50us2
0x0042	0x0000      	NOP
;__Lib_Delays.c,21 :: 		}
0x0044	0x0012      	RETURN      0
; end of _Delay_50us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0046	0x0E08      	MOVLW       8
0x0048	0x6E0C      	MOVWF       R12, 0
0x004A	0x0E23      	MOVLW       35
0x004C	0x6E0D      	MOVWF       R13, 0
L_Delay_5500us5:
0x004E	0x2E0D      	DECFSZ      R13, 1, 0
0x0050	0xD7FE      	BRA         L_Delay_5500us5
0x0052	0x2E0C      	DECFSZ      R12, 1, 0
0x0054	0xD7FC      	BRA         L_Delay_5500us5
;__Lib_Delays.c,33 :: 		}
0x0056	0x0012      	RETURN      0
; end of _Delay_5500us
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0058	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
0x005A	0x0012      	RETURN      0
; end of _Delay_1us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x005C	0x0100      	MOVLB       0
0x005E	0xBFF9      	BTFSC       FARG_Lcd_Cmd_out_char, 7, 1
0x0060	0xD002      	BRA         L__Lcd_Cmd20
0x0062	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x0064	0xD001      	BRA         L__Lcd_Cmd21
L__Lcd_Cmd20:
0x0066	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd21:
;__Lib_Lcd.c,21 :: 		
0x0068	0xBDF9      	BTFSC       FARG_Lcd_Cmd_out_char, 6, 1
0x006A	0xD002      	BRA         L__Lcd_Cmd22
0x006C	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x006E	0xD001      	BRA         L__Lcd_Cmd23
L__Lcd_Cmd22:
0x0070	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd23:
;__Lib_Lcd.c,22 :: 		
0x0072	0xBBF9      	BTFSC       FARG_Lcd_Cmd_out_char, 5, 1
0x0074	0xD002      	BRA         L__Lcd_Cmd24
0x0076	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x0078	0xD001      	BRA         L__Lcd_Cmd25
L__Lcd_Cmd24:
0x007A	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd25:
;__Lib_Lcd.c,23 :: 		
0x007C	0xB9F9      	BTFSC       FARG_Lcd_Cmd_out_char, 4, 1
0x007E	0xD002      	BRA         L__Lcd_Cmd26
0x0080	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x0082	0xD001      	BRA         L__Lcd_Cmd27
L__Lcd_Cmd26:
0x0084	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd27:
;__Lib_Lcd.c,25 :: 		
0x0086	0xB5DC      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x0088	0xD002      	BRA         L__Lcd_Cmd28
0x008A	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x008C	0xD001      	BRA         L__Lcd_Cmd29
L__Lcd_Cmd28:
0x008E	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd29:
;__Lib_Lcd.c,28 :: 		
0x0090	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,29 :: 		
0x0092	0xDFE2      	RCALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0094	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,33 :: 		
0x0096	0xB7F9      	BTFSC       FARG_Lcd_Cmd_out_char, 3, 1
0x0098	0xD002      	BRA         L__Lcd_Cmd30
0x009A	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
0x009C	0xD001      	BRA         L__Lcd_Cmd31
L__Lcd_Cmd30:
0x009E	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
L__Lcd_Cmd31:
;__Lib_Lcd.c,34 :: 		
0x00A0	0xB5F9      	BTFSC       FARG_Lcd_Cmd_out_char, 2, 1
0x00A2	0xD002      	BRA         L__Lcd_Cmd32
0x00A4	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
0x00A6	0xD001      	BRA         L__Lcd_Cmd33
L__Lcd_Cmd32:
0x00A8	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
L__Lcd_Cmd33:
;__Lib_Lcd.c,35 :: 		
0x00AA	0xB3F9      	BTFSC       FARG_Lcd_Cmd_out_char, 1, 1
0x00AC	0xD002      	BRA         L__Lcd_Cmd34
0x00AE	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
0x00B0	0xD001      	BRA         L__Lcd_Cmd35
L__Lcd_Cmd34:
0x00B2	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
L__Lcd_Cmd35:
;__Lib_Lcd.c,36 :: 		
0x00B4	0xB1F9      	BTFSC       FARG_Lcd_Cmd_out_char, 0, 1
0x00B6	0xD002      	BRA         L__Lcd_Cmd36
0x00B8	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
0x00BA	0xD001      	BRA         L__Lcd_Cmd37
L__Lcd_Cmd36:
0x00BC	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
L__Lcd_Cmd37:
;__Lib_Lcd.c,38 :: 		
0x00BE	0xB5DC      	BTFSC       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00C0	0xD002      	BRA         L__Lcd_Cmd38
0x00C2	0x8483      	BSF         LCD_RS, BitPos(LCD_RS+0) 
0x00C4	0xD001      	BRA         L__Lcd_Cmd39
L__Lcd_Cmd38:
0x00C6	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
L__Lcd_Cmd39:
;__Lib_Lcd.c,40 :: 		
0x00C8	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,41 :: 		
0x00CA	0xDFC6      	RCALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x00CC	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,44 :: 		
0x00CE	0xA5DC      	BTFSS       __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
0x00D0	0xD002      	BRA         L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x00D2	0xDFB9      	RCALL       _Delay_5500us
0x00D4	0xD001      	BRA         L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x00D6	0xDFB1      	RCALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
0x00D8	0x0012      	RETURN      0
; end of _Lcd_Cmd
_Div_16x16_U:
;__Lib_Math.c,102 :: 		
;__Lib_Math.c,109 :: 		
0x00DA	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,110 :: 		
0x00DC	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,111 :: 		
0x00DE	0x0E10      	MOVLW       16
;__Lib_Math.c,112 :: 		
0x00E0	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,113 :: 		
0x00E2	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,114 :: 		
0x00E4	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,115 :: 		
0x00E6	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,116 :: 		
0x00E8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,117 :: 		
0x00EA	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,118 :: 		
0x00EC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,119 :: 		
0x00EE	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,120 :: 		
0x00F0	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,121 :: 		
0x00F2	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,122 :: 		
0x00F4	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,123 :: 		
0x00F6	0xD007      	BRA         $+16
;__Lib_Math.c,124 :: 		
0x00F8	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,125 :: 		
0x00FA	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,126 :: 		
0x00FC	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,127 :: 		
0x00FE	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,128 :: 		
0x0100	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,129 :: 		
0x0102	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,130 :: 		
0x0104	0x90D8      	BCF         STATUS, 0, 0
;__Lib_Math.c,131 :: 		
0x0106	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,132 :: 		
0x0108	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,133 :: 		
0x010A	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,134 :: 		
0x010C	0xD7EA      	BRA         $-42
;__Lib_Math.c,136 :: 		
0x010E	0x0012      	RETURN      0
; end of _Div_16x16_U
_Div_16x16_S_L:
;__Lib_Math.c,139 :: 		
;__Lib_Math.c,146 :: 		
0x0110	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,147 :: 		
0x0112	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,148 :: 		
0x0114	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,149 :: 		
0x0116	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,150 :: 		
0x0118	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,151 :: 		
0x011A	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,152 :: 		
0x011C	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,153 :: 		
0x011E	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,154 :: 		
0x0120	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,155 :: 		
0x0122	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,156 :: 		
0x0124	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,158 :: 		
0x0126	0x0E0F      	MOVLW       15
;__Lib_Math.c,159 :: 		
0x0128	0x6E0C      	MOVWF       R12, 0
;__Lib_Math.c,161 :: 		
0x012A	0x3401      	RLCF        R1, 0, 0
;__Lib_Math.c,162 :: 		
0x012C	0x3608      	RLCF        R8, 1, 0
;__Lib_Math.c,163 :: 		
0x012E	0x3609      	RLCF        R9, 1, 0
;__Lib_Math.c,164 :: 		
0x0130	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,166 :: 		
0x0132	0xA000      	BTFSS       R0, 0, 0
;__Lib_Math.c,167 :: 		
0x0134	0xD006      	BRA         $+14
;__Lib_Math.c,168 :: 		
0x0136	0x5E08      	SUBWF       R8, 1, 0
;__Lib_Math.c,169 :: 		
0x0138	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,170 :: 		
0x013A	0xA0D8      	BTFSS       STATUS, 0, 0
;__Lib_Math.c,171 :: 		
0x013C	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,172 :: 		
0x013E	0x5E09      	SUBWF       R9, 1, 0
;__Lib_Math.c,173 :: 		
0x0140	0xD005      	BRA         $+12
;__Lib_Math.c,175 :: 		
0x0142	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,176 :: 		
0x0144	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,177 :: 		
0x0146	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,178 :: 		
0x0148	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,179 :: 		
0x014A	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,181 :: 		
0x014C	0x3600      	RLCF        R0, 1, 0
;__Lib_Math.c,182 :: 		
0x014E	0x3601      	RLCF        R1, 1, 0
;__Lib_Math.c,184 :: 		
0x0150	0x2E0C      	DECFSZ      R12, 1, 0
;__Lib_Math.c,185 :: 		
0x0152	0xD7EB      	BRA         $-40
;__Lib_Math.c,187 :: 		
0x0154	0xB000      	BTFSC       R0, 0, 0
;__Lib_Math.c,188 :: 		
0x0156	0xD006      	BRA         $+14
;__Lib_Math.c,189 :: 		
0x0158	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,190 :: 		
0x015A	0x2608      	ADDWF       R8, 1, 0
;__Lib_Math.c,191 :: 		
0x015C	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,192 :: 		
0x015E	0xB0D8      	BTFSC       STATUS, 0, 0
;__Lib_Math.c,193 :: 		
0x0160	0x3C05      	INCFSZ      R5, 0, 0
;__Lib_Math.c,194 :: 		
0x0162	0x2609      	ADDWF       R9, 1, 0
;__Lib_Math.c,195 :: 		
0x0164	0x0000      	NOP
;__Lib_Math.c,197 :: 		
0x0166	0x0012      	RETURN      0
; end of _Div_16x16_S_L
_WordToStr:
;__Lib_Conversions.c,21 :: 		
;__Lib_Conversions.c,26 :: 		
0x0168	0x0100      	MOVLB       0
0x016A	0x6BF6      	CLRF        WordToStr_len_L0, 1
L_WordToStr6:
0x016C	0x0E05      	MOVLW       5
0x016E	0x5DF6      	SUBWF       WordToStr_len_L0, 0, 1
0x0170	0xE20A      	BC          L_WordToStr7
;__Lib_Conversions.c,27 :: 		
0x0172	0x51F6      	MOVF        WordToStr_len_L0, 0, 1
0x0174	0x25F4      	ADDWF       FARG_WordToStr_output, 0, 1
0x0176	0x6EE1      	MOVWF       FSR1L 
0x0178	0x0E00      	MOVLW       0
0x017A	0x21F5      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x017C	0x6EE2      	MOVWF       FSR1H 
0x017E	0x0E20      	MOVLW       32
0x0180	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,26 :: 		
0x0182	0x2BF6      	INCF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,27 :: 		
0x0184	0xD7F3      	BRA         L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,28 :: 		
0x0186	0x51F6      	MOVF        WordToStr_len_L0, 0, 1
0x0188	0x25F4      	ADDWF       FARG_WordToStr_output, 0, 1
0x018A	0x6EE1      	MOVWF       FSR1L 
0x018C	0x0E00      	MOVLW       0
0x018E	0x21F5      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x0190	0x6EE2      	MOVWF       FSR1H 
0x0192	0x6AE6      	CLRF        POSTINC1 
0x0194	0x07F6      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,30 :: 		
L_WordToStr9:
;__Lib_Conversions.c,31 :: 		
0x0196	0x51F6      	MOVF        WordToStr_len_L0, 0, 1
0x0198	0x25F4      	ADDWF       FARG_WordToStr_output, 0, 1
0x019A	0x6FF7      	MOVWF       FLOC__WordToStr, 1
0x019C	0x0E00      	MOVLW       0
0x019E	0x21F5      	ADDWFC      FARG_WordToStr_output+1, 0, 1
0x01A0	0x6FF8      	MOVWF       FLOC__WordToStr+1, 1
0x01A2	0x0E0A      	MOVLW       10
0x01A4	0x6E04      	MOVWF       R4 
0x01A6	0x0E00      	MOVLW       0
0x01A8	0x6E05      	MOVWF       R5 
0x01AA	0xF000C0F2  	MOVFF       FARG_WordToStr_input, R0
0x01AE	0xF001C0F3  	MOVFF       FARG_WordToStr_input+1, R1
0x01B2	0xDF93      	RCALL       _Div_16x16_U
0x01B4	0xF000C008  	MOVFF       R8, R0
0x01B8	0xF001C009  	MOVFF       R9, R1
0x01BC	0x0E30      	MOVLW       48
0x01BE	0x2600      	ADDWF       R0, 1 
0x01C0	0xFFE1C0F7  	MOVFF       FLOC__WordToStr, FSR1L
0x01C4	0xFFE2C0F8  	MOVFF       FLOC__WordToStr+1, FSR1H
0x01C8	0xFFE6C000  	MOVFF       R0, POSTINC1
;__Lib_Conversions.c,32 :: 		
0x01CC	0x0E0A      	MOVLW       10
0x01CE	0x6E04      	MOVWF       R4 
0x01D0	0x0E00      	MOVLW       0
0x01D2	0x6E05      	MOVWF       R5 
0x01D4	0xF000C0F2  	MOVFF       FARG_WordToStr_input, R0
0x01D8	0xF001C0F3  	MOVFF       FARG_WordToStr_input+1, R1
0x01DC	0xDF7E      	RCALL       _Div_16x16_U
0x01DE	0xF0F2C000  	MOVFF       R0, FARG_WordToStr_input
0x01E2	0xF0F3C001  	MOVFF       R1, FARG_WordToStr_input+1
;__Lib_Conversions.c,33 :: 		
0x01E6	0x0E00      	MOVLW       0
0x01E8	0x1801      	XORWF       R1, 0 
0x01EA	0xE102      	BNZ         L__WordToStr63
0x01EC	0x0E00      	MOVLW       0
0x01EE	0x1800      	XORWF       R0, 0 
L__WordToStr63:
0x01F0	0xE101      	BNZ         L_WordToStr11
;__Lib_Conversions.c,34 :: 		
0x01F2	0xD002      	BRA         L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,35 :: 		
0x01F4	0x07F6      	DECF        WordToStr_len_L0, 1, 1
;__Lib_Conversions.c,36 :: 		
0x01F6	0xD7CF      	BRA         L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,37 :: 		
0x01F8	0x0012      	RETURN      0
; end of _WordToStr
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x01FA	0x0100      	MOVLB       0
0x01FC	0x95DC      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,53 :: 		
0x01FE	0xF0F9C0F2  	MOVFF       FARG_Lcd_Chr_CP_out_char, FARG_Lcd_Cmd_out_char
0x0202	0xDF2C      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0204	0x85DC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,55 :: 		
0x0206	0x0012      	RETURN      0
; end of _Lcd_Chr_CP
_Div_16x16_S:
;__Lib_Math.c,200 :: 		
;__Lib_Math.c,208 :: 		
0x0208	0x5004      	MOVF        R4, 0 
0x020A	0x0A00      	XORLW       0
0x020C	0xE108      	BNZ         L_Div_16x16_S0
;__Lib_Math.c,209 :: 		
0x020E	0x5005      	MOVF        R5, 0 
0x0210	0x0A00      	XORLW       0
0x0212	0xE105      	BNZ         L_Div_16x16_S1
;__Lib_Math.c,210 :: 		
0x0214	0x0EFF      	MOVLW       255
0x0216	0x6E00      	MOVWF       R0 
;__Lib_Math.c,211 :: 		
0x0218	0x0E7F      	MOVLW       127
0x021A	0x6E01      	MOVWF       R1 
;__Lib_Math.c,212 :: 		
0x021C	0x0012      	RETURN      0
;__Lib_Math.c,213 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,216 :: 		
0x021E	0x6A0D      	CLRF        R13, 0
;__Lib_Math.c,217 :: 		
0x0220	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,218 :: 		
0x0222	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,219 :: 		
0x0224	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,220 :: 		
0x0226	0x1000      	IORWF       R0, 0, 0
;__Lib_Math.c,221 :: 		
0x0228	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,222 :: 		
0x022A	0x0C00      	RETLW       0
;__Lib_Math.c,224 :: 		
0x022C	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,225 :: 		
0x022E	0x1805      	XORWF       R5, 0, 0
;__Lib_Math.c,226 :: 		
0x0230	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,227 :: 		
0x0232	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,228 :: 		
0x0234	0x1E0D      	COMF        R13, 1, 0
;__Lib_Math.c,230 :: 		
0x0236	0x6A0B      	CLRF        R11, 0
;__Lib_Math.c,232 :: 		
0x0238	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,233 :: 		
0x023A	0xD005      	BRA         $+12
;__Lib_Math.c,235 :: 		
0x023C	0x1E04      	COMF        R4, 1, 0
;__Lib_Math.c,236 :: 		
0x023E	0x1E05      	COMF        R5, 1, 0
;__Lib_Math.c,237 :: 		
0x0240	0x2A04      	INCF        R4, 1, 0
;__Lib_Math.c,238 :: 		
0x0242	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,239 :: 		
0x0244	0x2A05      	INCF        R5, 1, 0
;__Lib_Math.c,241 :: 		
0x0246	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,242 :: 		
0x0248	0xD005      	BRA         $+12
;__Lib_Math.c,244 :: 		
0x024A	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,245 :: 		
0x024C	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,246 :: 		
0x024E	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,247 :: 		
0x0250	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,248 :: 		
0x0252	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,250 :: 		
0x0254	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,251 :: 		
0x0256	0x1005      	IORWF       R5, 0, 0
;__Lib_Math.c,252 :: 		
0x0258	0x6E0A      	MOVWF       R10, 0
;__Lib_Math.c,253 :: 		
0x025A	0xBE0A      	BTFSC       R10, 7, 0
;__Lib_Math.c,254 :: 		
0x025C	0xD010      	BRA         $+34
;__Lib_Math.c,256 :: 		
0x025E	0xDF58      	RCALL       _Div_16x16_S_L
;__Lib_Math.c,258 :: 		
0x0260	0xB00B      	BTFSC       R11, 0, 0
;__Lib_Math.c,259 :: 		
0x0262	0xD020      	BRA         $+66
;__Lib_Math.c,261 :: 		
0x0264	0xAE0D      	BTFSS       R13, 7, 0
;__Lib_Math.c,262 :: 		
0x0266	0x0C00      	RETLW       0
;__Lib_Math.c,264 :: 		
0x0268	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,265 :: 		
0x026A	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,266 :: 		
0x026C	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,267 :: 		
0x026E	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,268 :: 		
0x0270	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,270 :: 		
0x0272	0x1E08      	COMF        R8, 1, 0
;__Lib_Math.c,271 :: 		
0x0274	0x1E09      	COMF        R9, 1, 0
;__Lib_Math.c,272 :: 		
0x0276	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,273 :: 		
0x0278	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,274 :: 		
0x027A	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,276 :: 		
0x027C	0x0C00      	RETLW       0
;__Lib_Math.c,278 :: 		
0x027E	0xAE05      	BTFSS       R5, 7, 0
;__Lib_Math.c,279 :: 		
0x0280	0xD00D      	BRA         $+28
;__Lib_Math.c,280 :: 		
0x0282	0xBE01      	BTFSC       R1, 7, 0
;__Lib_Math.c,281 :: 		
0x0284	0xD007      	BRA         $+16
;__Lib_Math.c,282 :: 		
0x0286	0x5001      	MOVF        R1, 0, 0
;__Lib_Math.c,283 :: 		
0x0288	0x6E09      	MOVWF       R9, 0
;__Lib_Math.c,284 :: 		
0x028A	0x5000      	MOVF        R0, 0, 0
;__Lib_Math.c,285 :: 		
0x028C	0x6E08      	MOVWF       R8, 0
;__Lib_Math.c,286 :: 		
0x028E	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,287 :: 		
0x0290	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,288 :: 		
0x0292	0xD7E8      	BRA         $-46
;__Lib_Math.c,289 :: 		
0x0294	0x6A01      	CLRF        R1, 0
;__Lib_Math.c,290 :: 		
0x0296	0x6A00      	CLRF        R0, 0
;__Lib_Math.c,291 :: 		
0x0298	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,292 :: 		
0x029A	0x0C00      	RETLW       0
;__Lib_Math.c,294 :: 		
0x029C	0x1E01      	COMF        R1, 1, 0
;__Lib_Math.c,295 :: 		
0x029E	0x1E00      	COMF        R0, 1, 0
;__Lib_Math.c,296 :: 		
0x02A0	0x2A0B      	INCF        R11, 1, 0
;__Lib_Math.c,297 :: 		
0x02A2	0xD7DD      	BRA         $-68
;__Lib_Math.c,299 :: 		
0x02A4	0x2A08      	INCF        R8, 1, 0
;__Lib_Math.c,300 :: 		
0x02A6	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,301 :: 		
0x02A8	0x2A09      	INCF        R9, 1, 0
;__Lib_Math.c,302 :: 		
0x02AA	0x5004      	MOVF        R4, 0, 0
;__Lib_Math.c,303 :: 		
0x02AC	0x5C08      	SUBWF       R8, 0, 0
;__Lib_Math.c,304 :: 		
0x02AE	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,305 :: 		
0x02B0	0xD7D9      	BRA         $-76
;__Lib_Math.c,306 :: 		
0x02B2	0x5005      	MOVF        R5, 0, 0
;__Lib_Math.c,307 :: 		
0x02B4	0x5C09      	SUBWF       R9, 0, 0
;__Lib_Math.c,308 :: 		
0x02B6	0xA4D8      	BTFSS       STATUS, 2, 0
;__Lib_Math.c,309 :: 		
0x02B8	0xD7D5      	BRA         $-84
;__Lib_Math.c,310 :: 		
0x02BA	0x6A09      	CLRF        R9, 0
;__Lib_Math.c,311 :: 		
0x02BC	0x6A08      	CLRF        R8, 0
;__Lib_Math.c,312 :: 		
0x02BE	0x2A00      	INCF        R0, 1, 0
;__Lib_Math.c,313 :: 		
0x02C0	0xB4D8      	BTFSC       STATUS, 2, 0
;__Lib_Math.c,314 :: 		
0x02C2	0x2A01      	INCF        R1, 1, 0
;__Lib_Math.c,315 :: 		
0x02C4	0xAE01      	BTFSS       R1, 7, 0
;__Lib_Math.c,316 :: 		
0x02C6	0xD7CE      	BRA         $-98
;__Lib_Math.c,317 :: 		
0x02C8	0x0000      	NOP
;__Lib_Math.c,318 :: 		
0x02CA	0x0CFF      	RETLW       255
;__Lib_Math.c,320 :: 		
0x02CC	0x0012      	RETURN      0
; end of _Div_16x16_S
_IntToStr:
;__Lib_Conversions.c,69 :: 		
;__Lib_Conversions.c,75 :: 		
0x02CE	0x0100      	MOVLB       0
0x02D0	0x6BEE      	CLRF        IntToStr_negative_L0, 1
0x02D2	0x6BEF      	CLRF        IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,76 :: 		
0x02D4	0xF0F0C0E8  	MOVFF       FARG_IntToStr_input, IntToStr_inword_L0
0x02D8	0xF0F1C0E9  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
;__Lib_Conversions.c,77 :: 		
0x02DC	0x0E80      	MOVLW       128
0x02DE	0x19E9      	XORWF       FARG_IntToStr_input+1, 0, 1
0x02E0	0x6E00      	MOVWF       R0 
0x02E2	0x0E80      	MOVLW       128
0x02E4	0x5C00      	SUBWF       R0, 0 
0x02E6	0xE102      	BNZ         L__IntToStr65
0x02E8	0x0E00      	MOVLW       0
0x02EA	0x5DE8      	SUBWF       FARG_IntToStr_input, 0, 1
L__IntToStr65:
0x02EC	0xE20B      	BC          L_IntToStr18
;__Lib_Conversions.c,78 :: 		
0x02EE	0x0E01      	MOVLW       1
0x02F0	0x6FEE      	MOVWF       IntToStr_negative_L0, 1
0x02F2	0x0E00      	MOVLW       0
0x02F4	0x6FEF      	MOVWF       IntToStr_negative_L0+1, 1
;__Lib_Conversions.c,79 :: 		
0x02F6	0x51E8      	MOVF        FARG_IntToStr_input, 0, 1
0x02F8	0x0800      	SUBLW       0
0x02FA	0x6FF0      	MOVWF       IntToStr_inword_L0, 1
0x02FC	0xF0F1C0E9  	MOVFF       FARG_IntToStr_input+1, IntToStr_inword_L0+1
0x0300	0x0E00      	MOVLW       0
0x0302	0x57F1      	SUBFWB      IntToStr_inword_L0+1, 1, 1
;__Lib_Conversions.c,80 :: 		
L_IntToStr18:
;__Lib_Conversions.c,81 :: 		
0x0304	0xF0F2C0F0  	MOVFF       IntToStr_inword_L0, FARG_WordToStr_input
0x0308	0xF0F3C0F1  	MOVFF       IntToStr_inword_L0+1, FARG_WordToStr_input+1
0x030C	0xF0F4C0EA  	MOVFF       FARG_IntToStr_output, FARG_WordToStr_output
0x0310	0xF0F5C0EB  	MOVFF       FARG_IntToStr_output+1, FARG_WordToStr_output+1
0x0314	0xDF29      	RCALL       _WordToStr
;__Lib_Conversions.c,83 :: 		
0x0316	0x0E06      	MOVLW       6
0x0318	0x6FEC      	MOVWF       IntToStr_i_L0, 1
0x031A	0x0E00      	MOVLW       0
0x031C	0x6FED      	MOVWF       IntToStr_i_L0+1, 1
;__Lib_Conversions.c,84 :: 		
L_IntToStr19:
0x031E	0x0E00      	MOVLW       0
0x0320	0x6E00      	MOVWF       R0 
0x0322	0x51ED      	MOVF        IntToStr_i_L0+1, 0, 1
0x0324	0x5C00      	SUBWF       R0, 0 
0x0326	0xE102      	BNZ         L__IntToStr66
0x0328	0x51EC      	MOVF        IntToStr_i_L0, 0, 1
0x032A	0x0800      	SUBLW       0
L__IntToStr66:
0x032C	0xE219      	BC          L_IntToStr20
;__Lib_Conversions.c,85 :: 		
0x032E	0x51EC      	MOVF        IntToStr_i_L0, 0, 1
0x0330	0x25EA      	ADDWF       FARG_IntToStr_output, 0, 1
0x0332	0x6EE1      	MOVWF       FSR1L 
0x0334	0x51ED      	MOVF        IntToStr_i_L0+1, 0, 1
0x0336	0x21EB      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0338	0x6EE2      	MOVWF       FSR1H 
0x033A	0x0E01      	MOVLW       1
0x033C	0x5DEC      	SUBWF       IntToStr_i_L0, 0, 1
0x033E	0x6E00      	MOVWF       R0 
0x0340	0x0E00      	MOVLW       0
0x0342	0x59ED      	SUBWFB      IntToStr_i_L0+1, 0, 1
0x0344	0x6E01      	MOVWF       R1 
0x0346	0x5000      	MOVF        R0, 0 
0x0348	0x25EA      	ADDWF       FARG_IntToStr_output, 0, 1
0x034A	0x6EE9      	MOVWF       FSR0L 
0x034C	0x5001      	MOVF        R1, 0 
0x034E	0x21EB      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0350	0x6EEA      	MOVWF       FSR0H 
0x0352	0xFFE6CFEE  	MOVFF       POSTINC0, POSTINC1
;__Lib_Conversions.c,86 :: 		
0x0356	0x0E01      	MOVLW       1
0x0358	0x5FEC      	SUBWF       IntToStr_i_L0, 1, 1
0x035A	0x0E00      	MOVLW       0
0x035C	0x5BED      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,87 :: 		
0x035E	0xD7DF      	BRA         L_IntToStr19
L_IntToStr20:
;__Lib_Conversions.c,88 :: 		
0x0360	0xFFE1C0EA  	MOVFF       FARG_IntToStr_output, FSR1L
0x0364	0xFFE2C0EB  	MOVFF       FARG_IntToStr_output+1, FSR1H
0x0368	0x0E20      	MOVLW       32
0x036A	0x6EE6      	MOVWF       POSTINC1 
;__Lib_Conversions.c,89 :: 		
0x036C	0x51EE      	MOVF        IntToStr_negative_L0, 0, 1
0x036E	0x11EF      	IORWF       IntToStr_negative_L0+1, 0, 1
0x0370	0xE01A      	BZ          L_IntToStr21
;__Lib_Conversions.c,90 :: 		
0x0372	0x6BEC      	CLRF        IntToStr_i_L0, 1
0x0374	0x6BED      	CLRF        IntToStr_i_L0+1, 1
;__Lib_Conversions.c,91 :: 		
L_IntToStr22:
0x0376	0x51EC      	MOVF        IntToStr_i_L0, 0, 1
0x0378	0x25EA      	ADDWF       FARG_IntToStr_output, 0, 1
0x037A	0x6EE9      	MOVWF       FSR0L 
0x037C	0x51ED      	MOVF        IntToStr_i_L0+1, 0, 1
0x037E	0x21EB      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x0380	0x6EEA      	MOVWF       FSR0H 
0x0382	0x50EE      	MOVF        POSTINC0, 0 
0x0384	0x0A20      	XORLW       32
0x0386	0xE103      	BNZ         L_IntToStr23
0x0388	0x4BEC      	INFSNZ      IntToStr_i_L0, 1, 1
0x038A	0x2BED      	INCF        IntToStr_i_L0+1, 1, 1
0x038C	0xD7F4      	BRA         L_IntToStr22
L_IntToStr23:
;__Lib_Conversions.c,92 :: 		
0x038E	0x0E01      	MOVLW       1
0x0390	0x5FEC      	SUBWF       IntToStr_i_L0, 1, 1
0x0392	0x0E00      	MOVLW       0
0x0394	0x5BED      	SUBWFB      IntToStr_i_L0+1, 1, 1
;__Lib_Conversions.c,93 :: 		
0x0396	0x51EC      	MOVF        IntToStr_i_L0, 0, 1
0x0398	0x25EA      	ADDWF       FARG_IntToStr_output, 0, 1
0x039A	0x6EE1      	MOVWF       FSR1L 
0x039C	0x51ED      	MOVF        IntToStr_i_L0+1, 0, 1
0x039E	0x21EB      	ADDWFC      FARG_IntToStr_output+1, 0, 1
0x03A0	0x6EE2      	MOVWF       FSR1H 
0x03A2	0x0E2D      	MOVLW       45
0x03A4	0x6EE6      	MOVWF       POSTINC1 
L_IntToStr21:
;__Lib_Conversions.c,94 :: 		
0x03A6	0x0012      	RETURN      0
; end of _IntToStr
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x03A8	0xD010      	BRA         L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x03AA	0x0E80      	MOVLW       128
0x03AC	0x0100      	MOVLB       0
0x03AE	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x03B0	0xD01A      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x03B2	0x0EC0      	MOVLW       192
0x03B4	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x03B6	0xD017      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x03B8	0x0E94      	MOVLW       148
0x03BA	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x03BC	0xD014      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x03BE	0x0ED4      	MOVLW       212
0x03C0	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x03C2	0xD011      	BRA         L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x03C4	0x0E80      	MOVLW       128
0x03C6	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
;__Lib_Lcd.c,193 :: 		
0x03C8	0xD00E      	BRA         L_Lcd_Out12
L_Lcd_Out11:
0x03CA	0x0100      	MOVLB       0
0x03CC	0x51E8      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03CE	0x0A01      	XORLW       1
0x03D0	0xE0EC      	BZ          L_Lcd_Out13
0x03D2	0x51E8      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03D4	0x0A02      	XORLW       2
0x03D6	0xE0ED      	BZ          L_Lcd_Out14
0x03D8	0x51E8      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03DA	0x0A03      	XORLW       3
0x03DC	0xE0ED      	BZ          L_Lcd_Out15
0x03DE	0x51E8      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03E0	0x0A04      	XORLW       4
0x03E2	0xE0ED      	BZ          L_Lcd_Out16
0x03E4	0xD7EF      	BRA         L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x03E6	0x05E9      	DECF        FARG_Lcd_Out_column, 0, 1
0x03E8	0x6E00      	MOVWF       R0 
0x03EA	0x51E8      	MOVF        FARG_Lcd_Out_row, 0, 1
0x03EC	0x2600      	ADDWF       R0, 1 
0x03EE	0xF0E8C000  	MOVFF       R0, FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x03F2	0xF0F9C000  	MOVFF       R0, FARG_Lcd_Cmd_out_char
0x03F6	0xDE32      	RCALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x03F8	0x95DC      	BCF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,198 :: 		
0x03FA	0x6BEC      	CLRF        Lcd_Out_i_L0, 1
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x03FC	0x51EC      	MOVF        Lcd_Out_i_L0, 0, 1
0x03FE	0x25EA      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0400	0x6EE9      	MOVWF       FSR0L 
0x0402	0x0E00      	MOVLW       0
0x0404	0x21EB      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0406	0x6EEA      	MOVWF       FSR0H 
0x0408	0x52EE      	MOVF        POSTINC0, 1 
0x040A	0xE00B      	BZ          L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x040C	0x51EC      	MOVF        Lcd_Out_i_L0, 0, 1
0x040E	0x25EA      	ADDWF       FARG_Lcd_Out_text, 0, 1
0x0410	0x6EE9      	MOVWF       FSR0L 
0x0412	0x0E00      	MOVLW       0
0x0414	0x21EB      	ADDWFC      FARG_Lcd_Out_text+1, 0, 1
0x0416	0x6EEA      	MOVWF       FSR0H 
0x0418	0xF0F2CFEE  	MOVFF       POSTINC0, FARG_Lcd_Chr_CP_out_char
0x041C	0xDEEE      	RCALL       _Lcd_Chr_CP
0x041E	0x2BEC      	INCF        Lcd_Out_i_L0, 1, 1
0x0420	0xD7ED      	BRA         L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0422	0x85DC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,202 :: 		
0x0424	0x0012      	RETURN      0
; end of _Lcd_Out
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0426	0x9695      	BCF         LCD_EN_Direction, BitPos(LCD_EN_Direction+0) 
;__Lib_Lcd.c,87 :: 		
0x0428	0x9495      	BCF         LCD_RS_Direction, BitPos(LCD_RS_Direction+0) 
;__Lib_Lcd.c,88 :: 		
0x042A	0x9895      	BCF         LCD_D4_Direction, BitPos(LCD_D4_Direction+0) 
;__Lib_Lcd.c,89 :: 		
0x042C	0x9A95      	BCF         LCD_D5_Direction, BitPos(LCD_D5_Direction+0) 
;__Lib_Lcd.c,90 :: 		
0x042E	0x9C95      	BCF         LCD_D6_Direction, BitPos(LCD_D6_Direction+0) 
;__Lib_Lcd.c,91 :: 		
0x0430	0x9E95      	BCF         LCD_D7_Direction, BitPos(LCD_D7_Direction+0) 
;__Lib_Lcd.c,93 :: 		
0x0432	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,94 :: 		
0x0434	0x9483      	BCF         LCD_RS, BitPos(LCD_RS+0) 
;__Lib_Lcd.c,95 :: 		
0x0436	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,96 :: 		
0x0438	0x9C83      	BCF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,97 :: 		
0x043A	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,98 :: 		
0x043C	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,100 :: 		
0x043E	0xDE03      	RCALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0440	0xDE02      	RCALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x0442	0xDE01      	RCALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x0444	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,106 :: 		
0x0446	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,107 :: 		
0x0448	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,108 :: 		
0x044A	0xDE06      	RCALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x044C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,110 :: 		
0x044E	0xDDFB      	RCALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0450	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,113 :: 		
0x0452	0xDE02      	RCALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0454	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,115 :: 		
0x0456	0xDDF7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0458	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,118 :: 		
0x045A	0xDDFE      	RCALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x045C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,120 :: 		
0x045E	0xDDF3      	RCALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0460	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,124 :: 		
0x0462	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,125 :: 		
0x0464	0xDDF9      	RCALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x0466	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,127 :: 		
0x0468	0xDDEE      	RCALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x046A	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,131 :: 		
0x046C	0xDDF5      	RCALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x046E	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,134 :: 		
0x0470	0x9A83      	BCF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,135 :: 		
0x0472	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,136 :: 		
0x0474	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,137 :: 		
0x0476	0xDDF0      	RCALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0478	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,139 :: 		
0x047A	0xDDE5      	RCALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x047C	0x9E83      	BCF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,143 :: 		
0x047E	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,144 :: 		
0x0480	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,145 :: 		
0x0482	0xDDEA      	RCALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x0484	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,148 :: 		
0x0486	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,149 :: 		
0x0488	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,150 :: 		
0x048A	0xDDE6      	RCALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x048C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,152 :: 		
0x048E	0xDDDB      	RCALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x0490	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,156 :: 		
0x0492	0xDDE2      	RCALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x0494	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,159 :: 		
0x0496	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,160 :: 		
0x0498	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,161 :: 		
0x049A	0xDDDE      	RCALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x049C	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,163 :: 		
0x049E	0xDDD3      	RCALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x04A0	0x9883      	BCF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,167 :: 		
0x04A2	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,168 :: 		
0x04A4	0xDDD9      	RCALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x04A6	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,171 :: 		
0x04A8	0x8E83      	BSF         LCD_D7, BitPos(LCD_D7+0) 
;__Lib_Lcd.c,172 :: 		
0x04AA	0x8C83      	BSF         LCD_D6, BitPos(LCD_D6+0) 
;__Lib_Lcd.c,173 :: 		
0x04AC	0x8A83      	BSF         LCD_D5, BitPos(LCD_D5+0) 
;__Lib_Lcd.c,174 :: 		
0x04AE	0x8883      	BSF         LCD_D4, BitPos(LCD_D4+0) 
;__Lib_Lcd.c,175 :: 		
0x04B0	0x8683      	BSF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,176 :: 		
0x04B2	0xDDD2      	RCALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x04B4	0x9683      	BCF         LCD_EN, BitPos(LCD_EN+0) 
;__Lib_Lcd.c,179 :: 		
0x04B6	0xDDC7      	RCALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x04B8	0x0100      	MOVLB       0
0x04BA	0x85DC      	BSF         __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0), 1
;__Lib_Lcd.c,182 :: 		
0x04BC	0x0012      	RETURN      0
; end of _Lcd_Init
___CC2DW:
;__Lib_System.c,21 :: 		
;__Lib_System.c,23 :: 		
_CC2DL_Loop1:
;__Lib_System.c,24 :: 		
0x04BE	0x0009      	TBLRD*+
;__Lib_System.c,25 :: 		
0x04C0	0xFFE6CFF5  	MOVFF       TABLAT, POSTINC1
;__Lib_System.c,26 :: 		
0x04C4	0x0600      	DECF        R0, 1, 0
;__Lib_System.c,27 :: 		
0x04C6	0xE1FB      	BNZ         _CC2DL_Loop1
;__Lib_System.c,28 :: 		
0x04C8	0x0601      	DECF        R1, 1, 0
;__Lib_System.c,29 :: 		
0x04CA	0xE1F9      	BNZ         _CC2DL_Loop1
;__Lib_System.c,31 :: 		
0x04CC	0x0012      	RETURN      0
; end of ___CC2DW
_write_LCD:
;boom_lcd.c,22 :: 		void write_LCD(){
;boom_lcd.c,23 :: 		lcd_cmd(_lcd_clear);
0x04CE	0x0E01      	MOVLW       1
0x04D0	0x0100      	MOVLB       0
0x04D2	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x04D4	0xDDC3      	RCALL       _Lcd_Cmd
;boom_lcd.c,24 :: 		lcd_out(1,1, "No Train");
0x04D6	0x0E01      	MOVLW       1
0x04D8	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x04DA	0x0E01      	MOVLW       1
0x04DC	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x04DE	0x0E39      	MOVLW       ?lstr1_Boom_controller
0x04E0	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x04E2	0x0E00      	MOVLW       hi_addr(?lstr1_Boom_controller)
0x04E4	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04E6	0xDF60      	RCALL       _Lcd_Out
;boom_lcd.c,25 :: 		lcd_out(2,1, "Ready...");
0x04E8	0x0E02      	MOVLW       2
0x04EA	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x04EC	0x0E01      	MOVLW       1
0x04EE	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x04F0	0x0E27      	MOVLW       ?lstr2_Boom_controller
0x04F2	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x04F4	0x0E00      	MOVLW       hi_addr(?lstr2_Boom_controller)
0x04F6	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x04F8	0xDF57      	RCALL       _Lcd_Out
;boom_lcd.c,26 :: 		}
0x04FA	0x0012      	RETURN      0
; end of _write_LCD
_countdown:
;boom_7seg.c,25 :: 		void countdown(int countD) {
;boom_7seg.c,27 :: 		PORTC = 0xF0 & 0;          //Clear Segments, preserve PORTC4-7
0x04FC	0x6A82      	CLRF        PORTC 
;boom_7seg.c,30 :: 		for (i=(countD+1);i>0;i--){
0x04FE	0x0100      	MOVLB       0
0x0500	0x51DD      	MOVF        FARG_countdown_countD, 0, 1
0x0502	0x0F01      	ADDLW       1
0x0504	0x6FD5      	MOVWF       _i, 1
L_countdown1:
0x0506	0x51D5      	MOVF        _i, 0, 1
0x0508	0x0800      	SUBLW       0
0x050A	0xE26F      	BC          L_countdown2
;boom_7seg.c,31 :: 		inttostr(i-1,counting);
0x050C	0x05D5      	DECF        _i, 0, 1
0x050E	0x6FE8      	MOVWF       FARG_IntToStr_input, 1
0x0510	0x6BE9      	CLRF        FARG_IntToStr_input+1, 1
0x0512	0x0E00      	MOVLW       0
0x0514	0x5BE9      	SUBWFB      FARG_IntToStr_input+1, 1, 1
0x0516	0x0EDF      	MOVLW       countdown_counting_L0
0x0518	0x6FEA      	MOVWF       FARG_IntToStr_output, 1
0x051A	0x0E00      	MOVLW       hi_addr(countdown_counting_L0)
0x051C	0x6FEB      	MOVWF       FARG_IntToStr_output+1, 1
0x051E	0xDED7      	RCALL       _IntToStr
;boom_7seg.c,32 :: 		LCD_OUT(2,1,"                ");
0x0520	0x0E02      	MOVLW       2
0x0522	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0524	0x0E01      	MOVLW       1
0x0526	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x0528	0x0E16      	MOVLW       ?lstr3_Boom_controller
0x052A	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x052C	0x0E00      	MOVLW       hi_addr(?lstr3_Boom_controller)
0x052E	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0530	0xDF3B      	RCALL       _Lcd_Out
;boom_7seg.c,33 :: 		LCD_OUT(2,7, counting);
0x0532	0x0E02      	MOVLW       2
0x0534	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0536	0x0E07      	MOVLW       7
0x0538	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x053A	0x0EDF      	MOVLW       countdown_counting_L0
0x053C	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x053E	0x0E00      	MOVLW       hi_addr(countdown_counting_L0)
0x0540	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0542	0xDF32      	RCALL       _Lcd_Out
;boom_7seg.c,34 :: 		LCD_OUT(2,1,"time: ");
0x0544	0x0E02      	MOVLW       2
0x0546	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0548	0x0E01      	MOVLW       1
0x054A	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x054C	0x0E30      	MOVLW       ?lstr4_Boom_controller
0x054E	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0550	0x0E00      	MOVLW       hi_addr(?lstr4_Boom_controller)
0x0552	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0554	0xDF29      	RCALL       _Lcd_Out
;boom_7seg.c,35 :: 		LCD_OUT(2,13,"s");
0x0556	0x0E02      	MOVLW       2
0x0558	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x055A	0x0E0D      	MOVLW       13
0x055C	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x055E	0x0E37      	MOVLW       ?lstr5_Boom_controller
0x0560	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0562	0x0E00      	MOVLW       hi_addr(?lstr5_Boom_controller)
0x0564	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0566	0xDF20      	RCALL       _Lcd_Out
;boom_7seg.c,36 :: 		tens = (i-1)/10;
0x0568	0x05D5      	DECF        _i, 0, 1
0x056A	0x6FE6      	MOVWF       FLOC__countdown, 1
0x056C	0x6BE7      	CLRF        FLOC__countdown+1, 1
0x056E	0x0E00      	MOVLW       0
0x0570	0x5BE7      	SUBWFB      FLOC__countdown+1, 1, 1
0x0572	0x0E0A      	MOVLW       10
0x0574	0x6E04      	MOVWF       R4 
0x0576	0x0E00      	MOVLW       0
0x0578	0x6E05      	MOVWF       R5 
0x057A	0xF000C0E6  	MOVFF       FLOC__countdown, R0
0x057E	0xF001C0E7  	MOVFF       FLOC__countdown+1, R1
0x0582	0xDE42      	RCALL       _Div_16x16_S
0x0584	0xF0D7C000  	MOVFF       R0, _tens
;boom_7seg.c,37 :: 		units = (i-1)%10;
0x0588	0x0E0A      	MOVLW       10
0x058A	0x6E04      	MOVWF       R4 
0x058C	0x0E00      	MOVLW       0
0x058E	0x6E05      	MOVWF       R5 
0x0590	0xF000C0E6  	MOVFF       FLOC__countdown, R0
0x0594	0xF001C0E7  	MOVFF       FLOC__countdown+1, R1
0x0598	0xDE37      	RCALL       _Div_16x16_S
0x059A	0xF000C008  	MOVFF       R8, R0
0x059E	0xF001C009  	MOVFF       R9, R1
0x05A2	0xF0D6C000  	MOVFF       R0, _units
;boom_7seg.c,38 :: 		seg_tens = 1;              //select the "tens" seven segment digit
0x05A6	0x8083      	BSF         RD0_bit, 0 
;boom_7seg.c,39 :: 		PORTC = 0xF0 | tens;
0x05A8	0x0EF0      	MOVLW       240
0x05AA	0x0100      	MOVLB       0
0x05AC	0x11D7      	IORWF       _tens, 0, 1
0x05AE	0x6E82      	MOVWF       PORTC 
;boom_7seg.c,40 :: 		delay_ms(5);
0x05B0	0x0E07      	MOVLW       7
0x05B2	0x6E0C      	MOVWF       R12, 0
0x05B4	0x0E7D      	MOVLW       125
0x05B6	0x6E0D      	MOVWF       R13, 0
L_countdown4:
0x05B8	0x2E0D      	DECFSZ      R13, 1, 0
0x05BA	0xD7FE      	BRA         L_countdown4
0x05BC	0x2E0C      	DECFSZ      R12, 1, 0
0x05BE	0xD7FC      	BRA         L_countdown4
;boom_7seg.c,41 :: 		seg_tens = 0;
0x05C0	0x9083      	BCF         RD0_bit, 0 
;boom_7seg.c,42 :: 		seg_units = 1;             //select the "units" seven segment digit
0x05C2	0x8283      	BSF         RD1_bit, 1 
;boom_7seg.c,43 :: 		PORTC = 0xF0 | units;
0x05C4	0x0EF0      	MOVLW       240
0x05C6	0x11D6      	IORWF       _units, 0, 1
0x05C8	0x6E82      	MOVWF       PORTC 
;boom_7seg.c,44 :: 		seg_units = 0;
0x05CA	0x9283      	BCF         RD1_bit, 1 
;boom_7seg.c,45 :: 		PORTC = 0xF0 & 0;       //Clear contents to Segments, preserve PORTC4-7
0x05CC	0x6A82      	CLRF        PORTC 
;boom_7seg.c,46 :: 		delay_ms(994);
0x05CE	0x0E06      	MOVLW       6
0x05D0	0x6E0B      	MOVWF       R11, 0
0x05D2	0x0E0B      	MOVLW       11
0x05D4	0x6E0C      	MOVWF       R12, 0
0x05D6	0x0EE3      	MOVLW       227
0x05D8	0x6E0D      	MOVWF       R13, 0
L_countdown5:
0x05DA	0x2E0D      	DECFSZ      R13, 1, 0
0x05DC	0xD7FE      	BRA         L_countdown5
0x05DE	0x2E0C      	DECFSZ      R12, 1, 0
0x05E0	0xD7FC      	BRA         L_countdown5
0x05E2	0x2E0B      	DECFSZ      R11, 1, 0
0x05E4	0xD7FA      	BRA         L_countdown5
;boom_7seg.c,30 :: 		for (i=(countD+1);i>0;i--){
0x05E6	0x07D5      	DECF        _i, 1, 1
;boom_7seg.c,47 :: 		}
0x05E8	0xD78E      	BRA         L_countdown1
L_countdown2:
;boom_7seg.c,49 :: 		}
0x05EA	0x0012      	RETURN      0
; end of _countdown
_tf_stop:
;traffic_control.c,20 :: 		void tf_stop()
;traffic_control.c,23 :: 		delay_ms(250);
0x05EC	0x0E02      	MOVLW       2
0x05EE	0x6E0B      	MOVWF       R11, 0
0x05F0	0x0E45      	MOVLW       69
0x05F2	0x6E0C      	MOVWF       R12, 0
0x05F4	0x0EA9      	MOVLW       169
0x05F6	0x6E0D      	MOVWF       R13, 0
L_tf_stop7:
0x05F8	0x2E0D      	DECFSZ      R13, 1, 0
0x05FA	0xD7FE      	BRA         L_tf_stop7
0x05FC	0x2E0C      	DECFSZ      R12, 1, 0
0x05FE	0xD7FC      	BRA         L_tf_stop7
0x0600	0x2E0B      	DECFSZ      R11, 1, 0
0x0602	0xD7FA      	BRA         L_tf_stop7
0x0604	0x0000      	NOP
0x0606	0x0000      	NOP
;traffic_control.c,24 :: 		PORTA |= amber;
0x0608	0x8280      	BSF         PORTA, 1 
;traffic_control.c,25 :: 		boom_down = 1;
0x060A	0x8882      	BSF         RC4_bit, 4 
;traffic_control.c,26 :: 		boom_up = 0;
0x060C	0x9A82      	BCF         RC5_bit, 5 
;traffic_control.c,27 :: 		delay_ms(3000);
0x060E	0x0E10      	MOVLW       16
0x0610	0x6E0B      	MOVWF       R11, 0
0x0612	0x0E39      	MOVLW       57
0x0614	0x6E0C      	MOVWF       R12, 0
0x0616	0x0E0D      	MOVLW       13
0x0618	0x6E0D      	MOVWF       R13, 0
L_tf_stop8:
0x061A	0x2E0D      	DECFSZ      R13, 1, 0
0x061C	0xD7FE      	BRA         L_tf_stop8
0x061E	0x2E0C      	DECFSZ      R12, 1, 0
0x0620	0xD7FC      	BRA         L_tf_stop8
0x0622	0x2E0B      	DECFSZ      R11, 1, 0
0x0624	0xD7FA      	BRA         L_tf_stop8
0x0626	0x0000      	NOP
0x0628	0x0000      	NOP
;traffic_control.c,28 :: 		PORTA |= red;
0x062A	0x8080      	BSF         PORTA, 0 
;traffic_control.c,29 :: 		}
0x062C	0x0012      	RETURN      0
; end of _tf_stop
_main:
0x062E	0xF004ECD9  	CALL        2482, 0
;Boom_controller.c,15 :: 		void main() {
;Boom_controller.c,18 :: 		TRISB = 127;
0x0632	0x0E7F      	MOVLW       127
0x0634	0x6E93      	MOVWF       TRISB 
;Boom_controller.c,19 :: 		PORTC = 0;
0x0636	0x6A82      	CLRF        PORTC 
;Boom_controller.c,20 :: 		TRISC = 0;
0x0638	0x6A94      	CLRF        TRISC 
;Boom_controller.c,21 :: 		TRISD = 0;
0x063A	0x6A95      	CLRF        TRISD 
;Boom_controller.c,22 :: 		PORTD = 0;
0x063C	0x6A83      	CLRF        PORTD 
;Boom_controller.c,23 :: 		TRISD = 0;
0x063E	0x6A95      	CLRF        TRISD 
;Boom_controller.c,25 :: 		ADCON1 = 7;                        //configure PORTA pins as Digital IO
0x0640	0x0E07      	MOVLW       7
0x0642	0x6EC1      	MOVWF       ADCON1 
;Boom_controller.c,27 :: 		Lcd_Init();                        // Initialize LCD
0x0644	0xDEF0      	RCALL       _Lcd_Init
;Boom_controller.c,28 :: 		Lcd_Cmd(_LCD_CLEAR);               // Clear display
0x0646	0x0E01      	MOVLW       1
0x0648	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x064A	0xDD08      	RCALL       _Lcd_Cmd
;Boom_controller.c,29 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
0x064C	0x0E0C      	MOVLW       12
0x064E	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0650	0xDD05      	RCALL       _Lcd_Cmd
;Boom_controller.c,30 :: 		TRISB7_Bit = 0;                    //used by the timer LED
0x0652	0x9E93      	BCF         TRISB7_bit, 7 
;Boom_controller.c,31 :: 		proc_timer = 0;
0x0654	0x6BDA      	CLRF        _proc_timer, 1
0x0656	0x6BDB      	CLRF        _proc_timer+1, 1
;Boom_controller.c,35 :: 		TMR0H = 0;
0x0658	0x6AD7      	CLRF        TMR0H 
;Boom_controller.c,36 :: 		TMR0L = 0;
0x065A	0x6AD6      	CLRF        TMR0L 
;Boom_controller.c,37 :: 		T0CON = 0;
0x065C	0x6AD5      	CLRF        T0CON 
;Boom_controller.c,38 :: 		T08BIT_bit = 1;
0x065E	0x8CD5      	BSF         T08BIT_bit, 6 
;Boom_controller.c,40 :: 		TMR0ON_bit = 1;  //start the timer
0x0660	0x8ED5      	BSF         TMR0ON_bit, 7 
;Boom_controller.c,41 :: 		TMR0IF_bit = 0;
0x0662	0x94F2      	BCF         TMR0IF_bit, 2 
;Boom_controller.c,42 :: 		TMR0IE_bit = 1;
0x0664	0x8AF2      	BSF         TMR0IE_bit, 5 
;Boom_controller.c,44 :: 		INTEDG2_bit = 0;   //car on bridge, interrupt on falling edge
0x0666	0x98F1      	BCF         INTEDG2_bit, 4 
;Boom_controller.c,45 :: 		INT2IE_bit = 1;    //enable the interrupt
0x0668	0x88F0      	BSF         INT2IE_bit, 4 
;Boom_controller.c,46 :: 		car_bridge_flag = 0;
0x066A	0x99D9      	BCF         _car_bridge_flag, BitPos(_car_bridge_flag+0), 1
;Boom_controller.c,48 :: 		GIE_Bit = 1;     //search for TMR0 interrupt
0x066C	0x8EF2      	BSF         GIE_bit, 7 
;Boom_controller.c,51 :: 		tr_warn_flag = 1;
0x066E	0x8BD9      	BSF         _tr_warn_flag, BitPos(_tr_warn_flag+0), 1
;Boom_controller.c,52 :: 		tr_appr_flag = tr_bridge_flag = tr_off_flag = car_appr_flag = 1;
0x0670	0x85D9      	BSF         _car_appr_flag, BitPos(_car_appr_flag+0), 1
0x0672	0xB5D9      	BTFSC       _car_appr_flag, BitPos(_car_appr_flag+0), 1
0x0674	0xD002      	BRA         L__main50
0x0676	0x93D9      	BCF         _tr_off_flag, BitPos(_tr_off_flag+0), 1
0x0678	0xD001      	BRA         L__main51
L__main50:
0x067A	0x83D9      	BSF         _tr_off_flag, BitPos(_tr_off_flag+0), 1
L__main51:
0x067C	0xB3D9      	BTFSC       _tr_off_flag, BitPos(_tr_off_flag+0), 1
0x067E	0xD002      	BRA         L__main52
0x0680	0x97D9      	BCF         _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
0x0682	0xD001      	BRA         L__main53
L__main52:
0x0684	0x87D9      	BSF         _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
L__main53:
0x0686	0xB7D9      	BTFSC       _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
0x0688	0xD002      	BRA         L__main54
0x068A	0x9DD9      	BCF         _tr_appr_flag, BitPos(_tr_appr_flag+0), 1
0x068C	0xD001      	BRA         L__main55
L__main54:
0x068E	0x8DD9      	BSF         _tr_appr_flag, BitPos(_tr_appr_flag+0), 1
L__main55:
;Boom_controller.c,53 :: 		car_bridge_flag = car_off_flag = tr_stop_flag = tf_stop_flag = 1;
0x0690	0x83DC      	BSF         _tf_stop_flag, BitPos(_tf_stop_flag+0), 1
0x0692	0xB3DC      	BTFSC       _tf_stop_flag, BitPos(_tf_stop_flag+0), 1
0x0694	0xD002      	BRA         L__main56
0x0696	0x91DC      	BCF         _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
0x0698	0xD001      	BRA         L__main57
L__main56:
0x069A	0x81DC      	BSF         _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
L__main57:
0x069C	0xB1DC      	BTFSC       _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
0x069E	0xD002      	BRA         L__main58
0x06A0	0x9FD9      	BCF         _car_off_flag, BitPos(_car_off_flag+0), 1
0x06A2	0xD001      	BRA         L__main59
L__main58:
0x06A4	0x8FD9      	BSF         _car_off_flag, BitPos(_car_off_flag+0), 1
L__main59:
0x06A6	0xBFD9      	BTFSC       _car_off_flag, BitPos(_car_off_flag+0), 1
0x06A8	0xD002      	BRA         L__main60
0x06AA	0x99D9      	BCF         _car_bridge_flag, BitPos(_car_bridge_flag+0), 1
0x06AC	0xD001      	BRA         L__main61
L__main60:
0x06AE	0x89D9      	BSF         _car_bridge_flag, BitPos(_car_bridge_flag+0), 1
L__main61:
;Boom_controller.c,56 :: 		TRISC = 0;       //for the first four Pins, used to control the seven segment values.
0x06B0	0x6A94      	CLRF        TRISC 
;Boom_controller.c,57 :: 		TRISD = 0;       //for the two latch-enable pins
0x06B2	0x6A95      	CLRF        TRISD 
;Boom_controller.c,58 :: 		PORTC = 0;
0x06B4	0x6A82      	CLRF        PORTC 
;Boom_controller.c,61 :: 		lcd_cmd(_LCD_CLEAR);
0x06B6	0x0E01      	MOVLW       1
0x06B8	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x06BA	0xDCD0      	RCALL       _Lcd_Cmd
;Boom_controller.c,62 :: 		Lcd_Out(1,1, "MHAZO, M.");                 // Write text in first row
0x06BC	0x0E01      	MOVLW       1
0x06BE	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x06C0	0x0E01      	MOVLW       1
0x06C2	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x06C4	0x0E74      	MOVLW       ?lstr6_Boom_controller
0x06C6	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x06C8	0x0E00      	MOVLW       hi_addr(?lstr6_Boom_controller)
0x06CA	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x06CC	0xDE6D      	RCALL       _Lcd_Out
;Boom_controller.c,63 :: 		Lcd_out(2,1,"HIT400");
0x06CE	0x0E02      	MOVLW       2
0x06D0	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x06D2	0x0E01      	MOVLW       1
0x06D4	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x06D6	0x0E53      	MOVLW       ?lstr7_Boom_controller
0x06D8	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x06DA	0x0E00      	MOVLW       hi_addr(?lstr7_Boom_controller)
0x06DC	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x06DE	0xDE64      	RCALL       _Lcd_Out
;Boom_controller.c,64 :: 		delay_ms(1000);
0x06E0	0x0E06      	MOVLW       6
0x06E2	0x6E0B      	MOVWF       R11, 0
0x06E4	0x0E13      	MOVLW       19
0x06E6	0x6E0C      	MOVWF       R12, 0
0x06E8	0x0EAD      	MOVLW       173
0x06EA	0x6E0D      	MOVWF       R13, 0
L_main9:
0x06EC	0x2E0D      	DECFSZ      R13, 1, 0
0x06EE	0xD7FE      	BRA         L_main9
0x06F0	0x2E0C      	DECFSZ      R12, 1, 0
0x06F2	0xD7FC      	BRA         L_main9
0x06F4	0x2E0B      	DECFSZ      R11, 1, 0
0x06F6	0xD7FA      	BRA         L_main9
0x06F8	0x0000      	NOP
0x06FA	0x0000      	NOP
;Boom_controller.c,65 :: 		lcd_cmd(_LCD_CLEAR);
0x06FC	0x0E01      	MOVLW       1
0x06FE	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0700	0xDCAD      	RCALL       _Lcd_Cmd
;Boom_controller.c,66 :: 		Lcd_Out(1,1, "BRIDGE TRAFFIC");                 // Write text in first row
0x0702	0x0E01      	MOVLW       1
0x0704	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0706	0x0E01      	MOVLW       1
0x0708	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x070A	0x0E5A      	MOVLW       ?lstr8_Boom_controller
0x070C	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x070E	0x0E00      	MOVLW       hi_addr(?lstr8_Boom_controller)
0x0710	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0712	0xDE4A      	RCALL       _Lcd_Out
;Boom_controller.c,67 :: 		Lcd_out(2,1,"CONTROLLER");
0x0714	0x0E02      	MOVLW       2
0x0716	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0718	0x0E01      	MOVLW       1
0x071A	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x071C	0x0E69      	MOVLW       ?lstr9_Boom_controller
0x071E	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0720	0x0E00      	MOVLW       hi_addr(?lstr9_Boom_controller)
0x0722	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0724	0xDE41      	RCALL       _Lcd_Out
;Boom_controller.c,68 :: 		delay_ms(2000);
0x0726	0x0E0B      	MOVLW       11
0x0728	0x6E0B      	MOVWF       R11, 0
0x072A	0x0E26      	MOVLW       38
0x072C	0x6E0C      	MOVWF       R12, 0
0x072E	0x0E5D      	MOVLW       93
0x0730	0x6E0D      	MOVWF       R13, 0
L_main10:
0x0732	0x2E0D      	DECFSZ      R13, 1, 0
0x0734	0xD7FE      	BRA         L_main10
0x0736	0x2E0C      	DECFSZ      R12, 1, 0
0x0738	0xD7FC      	BRA         L_main10
0x073A	0x2E0B      	DECFSZ      R11, 1, 0
0x073C	0xD7FA      	BRA         L_main10
0x073E	0x0000      	NOP
0x0740	0x0000      	NOP
;Boom_controller.c,69 :: 		write_LCD();
0x0742	0xDEC5      	RCALL       _write_LCD
;Boom_controller.c,72 :: 		PORTA = 0;
0x0744	0x6A80      	CLRF        PORTA 
;Boom_controller.c,73 :: 		PORTC = 0;
0x0746	0x6A82      	CLRF        PORTC 
;Boom_controller.c,74 :: 		TRISA = 0;
0x0748	0x6A92      	CLRF        TRISA 
;Boom_controller.c,75 :: 		PORTA =0xFF;
0x074A	0x0EFF      	MOVLW       255
0x074C	0x6E80      	MOVWF       PORTA 
;Boom_controller.c,76 :: 		PORTC = 8;
0x074E	0x0E08      	MOVLW       8
0x0750	0x6E82      	MOVWF       PORTC 
;Boom_controller.c,77 :: 		seg_tens = 1;
0x0752	0x8083      	BSF         RD0_bit, 0 
;Boom_controller.c,78 :: 		seg_units = 1;
0x0754	0x8283      	BSF         RD1_bit, 1 
;Boom_controller.c,79 :: 		delay_ms(500);
0x0756	0x0E03      	MOVLW       3
0x0758	0x6E0B      	MOVWF       R11, 0
0x075A	0x0E8A      	MOVLW       138
0x075C	0x6E0C      	MOVWF       R12, 0
0x075E	0x0E55      	MOVLW       85
0x0760	0x6E0D      	MOVWF       R13, 0
L_main11:
0x0762	0x2E0D      	DECFSZ      R13, 1, 0
0x0764	0xD7FE      	BRA         L_main11
0x0766	0x2E0C      	DECFSZ      R12, 1, 0
0x0768	0xD7FC      	BRA         L_main11
0x076A	0x2E0B      	DECFSZ      R11, 1, 0
0x076C	0xD7FA      	BRA         L_main11
0x076E	0x0000      	NOP
0x0770	0x0000      	NOP
;Boom_controller.c,80 :: 		PORTA = 0;
0x0772	0x6A80      	CLRF        PORTA 
;Boom_controller.c,81 :: 		LCDWriteFlag = 0;
0x0774	0x91D9      	BCF         _LCDWriteFlag, BitPos(_LCDWriteFlag+0), 1
;Boom_controller.c,84 :: 		while(1) {
L_main12:
;Boom_controller.c,85 :: 		while (tr_warn && tr_warn_flag)  //while there is no train approaching
L_main14:
0x0776	0xAC81      	BTFSS       RB6_bit, 6 
0x0778	0xD011      	BRA         L_main15
0x077A	0xABD9      	BTFSS       _tr_warn_flag, BitPos(_tr_warn_flag+0), 1
0x077C	0xD00F      	BRA         L_main15
L__main49:
;Boom_controller.c,88 :: 		boom_down = 0;
0x077E	0x9882      	BCF         RC4_bit, 4 
;Boom_controller.c,89 :: 		boom_up = 1;                 //open boom
0x0780	0x8A82      	BSF         RC5_bit, 5 
;Boom_controller.c,90 :: 		PORTA = green;
0x0782	0x0E04      	MOVLW       4
0x0784	0x6E80      	MOVWF       PORTA 
;Boom_controller.c,91 :: 		delay_ms(100);
0x0786	0x0E82      	MOVLW       130
0x0788	0x6E0C      	MOVWF       R12, 0
0x078A	0x0EDD      	MOVLW       221
0x078C	0x6E0D      	MOVWF       R13, 0
L_main18:
0x078E	0x2E0D      	DECFSZ      R13, 1, 0
0x0790	0xD7FE      	BRA         L_main18
0x0792	0x2E0C      	DECFSZ      R12, 1, 0
0x0794	0xD7FC      	BRA         L_main18
0x0796	0x0000      	NOP
0x0798	0x0000      	NOP
;Boom_controller.c,92 :: 		} //end while !tr appr
0x079A	0xD7ED      	BRA         L_main14
L_main15:
;Boom_controller.c,94 :: 		if (!tr_warn && tr_warn_flag)      //train has been sensed
0x079C	0xBC81      	BTFSC       RB6_bit, 6 
0x079E	0xD065      	BRA         L_main21
0x07A0	0xABD9      	BTFSS       _tr_warn_flag, BitPos(_tr_warn_flag+0), 1
0x07A2	0xD063      	BRA         L_main21
L__main48:
;Boom_controller.c,96 :: 		tr_warn_flag = 0;
0x07A4	0x9BD9      	BCF         _tr_warn_flag, BitPos(_tr_warn_flag+0), 1
;Boom_controller.c,97 :: 		LCD_Out(1,1,"Train Approaches");
0x07A6	0x0E01      	MOVLW       1
0x07A8	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x07AA	0x0E01      	MOVLW       1
0x07AC	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x07AE	0x0E42      	MOVLW       ?lstr10_Boom_controller
0x07B0	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x07B2	0x0E00      	MOVLW       hi_addr(?lstr10_Boom_controller)
0x07B4	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x07B6	0xDDF8      	RCALL       _Lcd_Out
;Boom_controller.c,98 :: 		countDwn = 15;
0x07B8	0x0E0F      	MOVLW       15
0x07BA	0x6FD8      	MOVWF       _countDwn, 1
;Boom_controller.c,102 :: 		LCD_OUT(2,1, "15s Countdown");
0x07BC	0x0E02      	MOVLW       2
0x07BE	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x07C0	0x0E01      	MOVLW       1
0x07C2	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x07C4	0x0E7E      	MOVLW       ?lstr11_Boom_controller
0x07C6	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x07C8	0x0E00      	MOVLW       hi_addr(?lstr11_Boom_controller)
0x07CA	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x07CC	0xDDED      	RCALL       _Lcd_Out
;Boom_controller.c,103 :: 		delay_ms(1000);
0x07CE	0x0E06      	MOVLW       6
0x07D0	0x6E0B      	MOVWF       R11, 0
0x07D2	0x0E13      	MOVLW       19
0x07D4	0x6E0C      	MOVWF       R12, 0
0x07D6	0x0EAD      	MOVLW       173
0x07D8	0x6E0D      	MOVWF       R13, 0
L_main22:
0x07DA	0x2E0D      	DECFSZ      R13, 1, 0
0x07DC	0xD7FE      	BRA         L_main22
0x07DE	0x2E0C      	DECFSZ      R12, 1, 0
0x07E0	0xD7FC      	BRA         L_main22
0x07E2	0x2E0B      	DECFSZ      R11, 1, 0
0x07E4	0xD7FA      	BRA         L_main22
0x07E6	0x0000      	NOP
0x07E8	0x0000      	NOP
;Boom_controller.c,104 :: 		countdown(countDwn);
0x07EA	0xF0DDC0D8  	MOVFF       _countDwn, FARG_countdown_countD
0x07EE	0x0E00      	MOVLW       0
0x07F0	0xBFD8      	BTFSC       _countDwn, 7, 1
0x07F2	0x0EFF      	MOVLW       255
0x07F4	0x6FDE      	MOVWF       FARG_countdown_countD+1, 1
0x07F6	0xDE82      	RCALL       _countdown
;Boom_controller.c,105 :: 		lcd_cmd(_lcd_clear);
0x07F8	0x0E01      	MOVLW       1
0x07FA	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x07FC	0xDC2F      	RCALL       _Lcd_Cmd
;Boom_controller.c,107 :: 		while (RB1_Bit) {
L_main23:
0x07FE	0xA281      	BTFSS       RB1_bit, 1 
0x0800	0xD034      	BRA         L_main24
;Boom_controller.c,108 :: 		if(!car_bridge_flag)
0x0802	0xB9D9      	BTFSC       _car_bridge_flag, BitPos(_car_bridge_flag+0), 1
0x0804	0xD01C      	BRA         L_main25
;Boom_controller.c,111 :: 		INTEDG2_Bit = ~INTEDG2_Bit; //toggle interrupt edge
0x0806	0x78F1      	BTG         INTEDG2_bit, 4 
;Boom_controller.c,112 :: 		if(!LCDWriteFlag) {
0x0808	0xB1D9      	BTFSC       _LCDWriteFlag, BitPos(_LCDWriteFlag+0), 1
0x080A	0xD015      	BRA         L_main26
;Boom_controller.c,113 :: 		lcd_cmd(_lcd_clear);
0x080C	0x0E01      	MOVLW       1
0x080E	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0810	0xDC25      	RCALL       _Lcd_Cmd
;Boom_controller.c,114 :: 		lcd_out(1,1, "There's a car");
0x0812	0x0E01      	MOVLW       1
0x0814	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0816	0x0E01      	MOVLW       1
0x0818	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x081A	0x0EC7      	MOVLW       ?lstr12_Boom_controller
0x081C	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x081E	0x0E00      	MOVLW       hi_addr(?lstr12_Boom_controller)
0x0820	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0822	0xDDC2      	RCALL       _Lcd_Out
;Boom_controller.c,115 :: 		lcd_out(2,1, "on the bridge!");
0x0824	0x0E02      	MOVLW       2
0x0826	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0828	0x0E01      	MOVLW       1
0x082A	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x082C	0x0EB8      	MOVLW       ?lstr13_Boom_controller
0x082E	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0830	0x0E00      	MOVLW       hi_addr(?lstr13_Boom_controller)
0x0832	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0834	0xDDB9      	RCALL       _Lcd_Out
;Boom_controller.c,116 :: 		}
L_main26:
;Boom_controller.c,117 :: 		if (tr_stop_flag) {
0x0836	0xA1DC      	BTFSS       _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
0x0838	0xD002      	BRA         L_main27
;Boom_controller.c,118 :: 		tr_stop = 1;
0x083A	0x8680      	BSF         RA3_bit, 3 
;Boom_controller.c,119 :: 		tr_stop_flag = 0;
0x083C	0x91DC      	BCF         _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
;Boom_controller.c,120 :: 		}
L_main27:
;Boom_controller.c,121 :: 		}//if car bridge flag
L_main25:
;Boom_controller.c,123 :: 		if (tf_stop_flag) {
0x083E	0xA3DC      	BTFSS       _tf_stop_flag, BitPos(_tf_stop_flag+0), 1
0x0840	0xD002      	BRA         L_main28
;Boom_controller.c,124 :: 		tf_stop();
0x0842	0xDED4      	RCALL       _tf_stop
;Boom_controller.c,125 :: 		tf_stop_flag = 0;
0x0844	0x93DC      	BCF         _tf_stop_flag, BitPos(_tf_stop_flag+0), 1
;Boom_controller.c,126 :: 		}
L_main28:
;Boom_controller.c,129 :: 		if(!tr_stop_flag){
0x0846	0xB1DC      	BTFSC       _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
0x0848	0xD00E      	BRA         L_main29
;Boom_controller.c,130 :: 		if (!LCDWriteFlag) {
0x084A	0xB1D9      	BTFSC       _LCDWriteFlag, BitPos(_LCDWriteFlag+0), 1
0x084C	0xD00C      	BRA         L_main30
;Boom_controller.c,131 :: 		lcd_cmd(_lcd_clear);
0x084E	0x0E01      	MOVLW       1
0x0850	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x0852	0xDC04      	RCALL       _Lcd_Cmd
;Boom_controller.c,132 :: 		lcd_out(1,1,"Train Stopped.");
0x0854	0x0E01      	MOVLW       1
0x0856	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0858	0x0E01      	MOVLW       1
0x085A	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x085C	0x0E9C      	MOVLW       ?lstr14_Boom_controller
0x085E	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0860	0x0E00      	MOVLW       hi_addr(?lstr14_Boom_controller)
0x0862	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x0864	0xDDA1      	RCALL       _Lcd_Out
;Boom_controller.c,133 :: 		}
L_main30:
;Boom_controller.c,134 :: 		}
L_main29:
;Boom_controller.c,135 :: 		LCDWriteFlag = 1;       //write once, so that LCD doesn't blink
0x0866	0x81D9      	BSF         _LCDWriteFlag, BitPos(_LCDWriteFlag+0), 1
;Boom_controller.c,136 :: 		}
0x0868	0xD7CA      	BRA         L_main23
L_main24:
;Boom_controller.c,137 :: 		} //while no car has gotten off the bridge after train was detected
L_main21:
;Boom_controller.c,139 :: 		lcd_cmd(_lcd_clear);
0x086A	0x0E01      	MOVLW       1
0x086C	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x086E	0xF000EC2E  	CALL        _Lcd_Cmd, 0
;Boom_controller.c,142 :: 		while(!tr_bridge) {
L_main31:
0x0872	0xBA81      	BTFSC       RB5_bit, 5 
0x0874	0xD00D      	BRA         L_main32
;Boom_controller.c,143 :: 		tr_bridge_flag = 0;
0x0876	0x97D9      	BCF         _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
;Boom_controller.c,144 :: 		if (tr_stop_flag)lcd_out(1,1,"TRAIN ON BRIDGE");
0x0878	0xA1DC      	BTFSS       _tr_stop_flag, BitPos(_tr_stop_flag+0), 1
0x087A	0xD009      	BRA         L_main33
0x087C	0x0E01      	MOVLW       1
0x087E	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x0880	0x0E01      	MOVLW       1
0x0882	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x0884	0x0E8C      	MOVLW       ?lstr15_Boom_controller
0x0886	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x0888	0x0E00      	MOVLW       hi_addr(?lstr15_Boom_controller)
0x088A	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x088C	0xDD8D      	RCALL       _Lcd_Out
L_main33:
;Boom_controller.c,145 :: 		}
0x088E	0xD7F1      	BRA         L_main31
L_main32:
;Boom_controller.c,146 :: 		while(!tr_off && tr_off_flag && !tr_bridge_flag)
L_main34:
0x0890	0xB081      	BTFSC       RB0_bit, 0 
0x0892	0xD006      	BRA         L_main35
0x0894	0xA3D9      	BTFSS       _tr_off_flag, BitPos(_tr_off_flag+0), 1
0x0896	0xD004      	BRA         L_main35
0x0898	0xB7D9      	BTFSC       _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
0x089A	0xD002      	BRA         L_main35
L__main47:
;Boom_controller.c,148 :: 		tr_off_flag = 0;    //train is now getting off bridge.
0x089C	0x93D9      	BCF         _tr_off_flag, BitPos(_tr_off_flag+0), 1
;Boom_controller.c,150 :: 		}
0x089E	0xD7F8      	BRA         L_main34
L_main35:
;Boom_controller.c,151 :: 		while(tr_off && !tr_off_flag)
L_main38:
0x08A0	0xA081      	BTFSS       RB0_bit, 0 
0x08A2	0xD025      	BRA         L_main39
0x08A4	0xB3D9      	BTFSC       _tr_off_flag, BitPos(_tr_off_flag+0), 1
0x08A6	0xD023      	BRA         L_main39
L__main46:
;Boom_controller.c,153 :: 		tr_off_flag = 1;
0x08A8	0x83D9      	BSF         _tr_off_flag, BitPos(_tr_off_flag+0), 1
;Boom_controller.c,154 :: 		tr_warn_flag = 1;
0x08AA	0x8BD9      	BSF         _tr_warn_flag, BitPos(_tr_warn_flag+0), 1
;Boom_controller.c,155 :: 		tr_bridge_flag = 1;
0x08AC	0x87D9      	BSF         _tr_bridge_flag, BitPos(_tr_bridge_flag+0), 1
;Boom_controller.c,156 :: 		lcd_cmd(_lcd_clear);
0x08AE	0x0E01      	MOVLW       1
0x08B0	0x6FF9      	MOVWF       FARG_Lcd_Cmd_out_char, 1
0x08B2	0xF000EC2E  	CALL        _Lcd_Cmd, 0
;Boom_controller.c,157 :: 		lcd_out(1,1,"Train Passed");
0x08B6	0x0E01      	MOVLW       1
0x08B8	0x6FE8      	MOVWF       FARG_Lcd_Out_row, 1
0x08BA	0x0E01      	MOVLW       1
0x08BC	0x6FE9      	MOVWF       FARG_Lcd_Out_column, 1
0x08BE	0x0EAB      	MOVLW       ?lstr16_Boom_controller
0x08C0	0x6FEA      	MOVWF       FARG_Lcd_Out_text, 1
0x08C2	0x0E00      	MOVLW       hi_addr(?lstr16_Boom_controller)
0x08C4	0x6FEB      	MOVWF       FARG_Lcd_Out_text+1, 1
0x08C6	0xDD70      	RCALL       _Lcd_Out
;Boom_controller.c,158 :: 		delay_ms(500);
0x08C8	0x0E03      	MOVLW       3
0x08CA	0x6E0B      	MOVWF       R11, 0
0x08CC	0x0E8A      	MOVLW       138
0x08CE	0x6E0C      	MOVWF       R12, 0
0x08D0	0x0E55      	MOVLW       85
0x08D2	0x6E0D      	MOVWF       R13, 0
L_main42:
0x08D4	0x2E0D      	DECFSZ      R13, 1, 0
0x08D6	0xD7FE      	BRA         L_main42
0x08D8	0x2E0C      	DECFSZ      R12, 1, 0
0x08DA	0xD7FC      	BRA         L_main42
0x08DC	0x2E0B      	DECFSZ      R11, 1, 0
0x08DE	0xD7FA      	BRA         L_main42
0x08E0	0x0000      	NOP
0x08E2	0x0000      	NOP
;Boom_controller.c,159 :: 		PORTA |= green;
0x08E4	0x8480      	BSF         PORTA, 2 
;Boom_controller.c,160 :: 		boom_up = 1;
0x08E6	0x8A82      	BSF         RC5_bit, 5 
;Boom_controller.c,161 :: 		boom_down = 0;
0x08E8	0x9882      	BCF         RC4_bit, 4 
;Boom_controller.c,162 :: 		write_LCD();
0x08EA	0xDDF1      	RCALL       _write_LCD
;Boom_controller.c,163 :: 		}
0x08EC	0xD7D9      	BRA         L_main38
L_main39:
;Boom_controller.c,165 :: 		}//end endless
0x08EE	0xD743      	BRA         L_main12
;Boom_controller.c,167 :: 		}
0x08F0	0xD7FF      	BRA         $+0
; end of _main
0x09B2	0xF016EE10  	LFSR        1, 22
0x09B6	0x0EBF      	MOVLW       191
0x09B8	0x6E00      	MOVWF       R0 
0x09BA	0x0E01      	MOVLW       1
0x09BC	0x6E01      	MOVWF       R1 
0x09BE	0x0EF2      	MOVLW       242
0x09C0	0x6EF6      	MOVWF       4086 
0x09C2	0x0E08      	MOVLW       8
0x09C4	0x6EF7      	MOVWF       TBLPTRH 
0x09C6	0x0E00      	MOVLW       0
0x09C8	0x6EF8      	MOVWF       TBLPTRU 
0x09CA	0xF002EC5F  	CALL        1214, 0
0x09CE	0x0012      	RETURN      0
;Boom_controller.c,0 :: ?ICS?lstr3_Boom_controller
0x08F2	0x2020 ;?ICS?lstr3_Boom_controller+0
0x08F4	0x2020 ;?ICS?lstr3_Boom_controller+2
0x08F6	0x2020 ;?ICS?lstr3_Boom_controller+4
0x08F8	0x2020 ;?ICS?lstr3_Boom_controller+6
0x08FA	0x2020 ;?ICS?lstr3_Boom_controller+8
0x08FC	0x2020 ;?ICS?lstr3_Boom_controller+10
0x08FE	0x2020 ;?ICS?lstr3_Boom_controller+12
0x0900	0x2020 ;?ICS?lstr3_Boom_controller+14
0x0902	0x00 ;?ICS?lstr3_Boom_controller+16
; end of ?ICS?lstr3_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr2_Boom_controller
0x0903	0x6552 ;?ICS?lstr2_Boom_controller+0
0x0905	0x6461 ;?ICS?lstr2_Boom_controller+2
0x0907	0x2E79 ;?ICS?lstr2_Boom_controller+4
0x0909	0x2E2E ;?ICS?lstr2_Boom_controller+6
0x090B	0x00 ;?ICS?lstr2_Boom_controller+8
; end of ?ICS?lstr2_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr4_Boom_controller
0x090C	0x6974 ;?ICS?lstr4_Boom_controller+0
0x090E	0x656D ;?ICS?lstr4_Boom_controller+2
0x0910	0x203A ;?ICS?lstr4_Boom_controller+4
0x0912	0x00 ;?ICS?lstr4_Boom_controller+6
; end of ?ICS?lstr4_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr5_Boom_controller
0x0913	0x0073 ;?ICS?lstr5_Boom_controller+0
; end of ?ICS?lstr5_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr1_Boom_controller
0x0915	0x6F4E ;?ICS?lstr1_Boom_controller+0
0x0917	0x5420 ;?ICS?lstr1_Boom_controller+2
0x0919	0x6172 ;?ICS?lstr1_Boom_controller+4
0x091B	0x6E69 ;?ICS?lstr1_Boom_controller+6
0x091D	0x00 ;?ICS?lstr1_Boom_controller+8
; end of ?ICS?lstr1_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr10_Boom_controller
0x091E	0x7254 ;?ICS?lstr10_Boom_controller+0
0x0920	0x6961 ;?ICS?lstr10_Boom_controller+2
0x0922	0x206E ;?ICS?lstr10_Boom_controller+4
0x0924	0x7041 ;?ICS?lstr10_Boom_controller+6
0x0926	0x7270 ;?ICS?lstr10_Boom_controller+8
0x0928	0x616F ;?ICS?lstr10_Boom_controller+10
0x092A	0x6863 ;?ICS?lstr10_Boom_controller+12
0x092C	0x7365 ;?ICS?lstr10_Boom_controller+14
0x092E	0x00 ;?ICS?lstr10_Boom_controller+16
; end of ?ICS?lstr10_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr7_Boom_controller
0x092F	0x4948 ;?ICS?lstr7_Boom_controller+0
0x0931	0x3454 ;?ICS?lstr7_Boom_controller+2
0x0933	0x3030 ;?ICS?lstr7_Boom_controller+4
0x0935	0x00 ;?ICS?lstr7_Boom_controller+6
; end of ?ICS?lstr7_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr8_Boom_controller
0x0936	0x5242 ;?ICS?lstr8_Boom_controller+0
0x0938	0x4449 ;?ICS?lstr8_Boom_controller+2
0x093A	0x4547 ;?ICS?lstr8_Boom_controller+4
0x093C	0x5420 ;?ICS?lstr8_Boom_controller+6
0x093E	0x4152 ;?ICS?lstr8_Boom_controller+8
0x0940	0x4646 ;?ICS?lstr8_Boom_controller+10
0x0942	0x4349 ;?ICS?lstr8_Boom_controller+12
0x0944	0x00 ;?ICS?lstr8_Boom_controller+14
; end of ?ICS?lstr8_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr9_Boom_controller
0x0945	0x4F43 ;?ICS?lstr9_Boom_controller+0
0x0947	0x544E ;?ICS?lstr9_Boom_controller+2
0x0949	0x4F52 ;?ICS?lstr9_Boom_controller+4
0x094B	0x4C4C ;?ICS?lstr9_Boom_controller+6
0x094D	0x5245 ;?ICS?lstr9_Boom_controller+8
0x094F	0x00 ;?ICS?lstr9_Boom_controller+10
; end of ?ICS?lstr9_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr6_Boom_controller
0x0950	0x484D ;?ICS?lstr6_Boom_controller+0
0x0952	0x5A41 ;?ICS?lstr6_Boom_controller+2
0x0954	0x2C4F ;?ICS?lstr6_Boom_controller+4
0x0956	0x4D20 ;?ICS?lstr6_Boom_controller+6
0x0958	0x002E ;?ICS?lstr6_Boom_controller+8
; end of ?ICS?lstr6_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr11_Boom_controller
0x095A	0x3531 ;?ICS?lstr11_Boom_controller+0
0x095C	0x2073 ;?ICS?lstr11_Boom_controller+2
0x095E	0x6F43 ;?ICS?lstr11_Boom_controller+4
0x0960	0x6E75 ;?ICS?lstr11_Boom_controller+6
0x0962	0x6474 ;?ICS?lstr11_Boom_controller+8
0x0964	0x776F ;?ICS?lstr11_Boom_controller+10
0x0966	0x006E ;?ICS?lstr11_Boom_controller+12
; end of ?ICS?lstr11_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr15_Boom_controller
0x0968	0x5254 ;?ICS?lstr15_Boom_controller+0
0x096A	0x4941 ;?ICS?lstr15_Boom_controller+2
0x096C	0x204E ;?ICS?lstr15_Boom_controller+4
0x096E	0x4E4F ;?ICS?lstr15_Boom_controller+6
0x0970	0x4220 ;?ICS?lstr15_Boom_controller+8
0x0972	0x4952 ;?ICS?lstr15_Boom_controller+10
0x0974	0x4744 ;?ICS?lstr15_Boom_controller+12
0x0976	0x0045 ;?ICS?lstr15_Boom_controller+14
; end of ?ICS?lstr15_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr14_Boom_controller
0x0978	0x7254 ;?ICS?lstr14_Boom_controller+0
0x097A	0x6961 ;?ICS?lstr14_Boom_controller+2
0x097C	0x206E ;?ICS?lstr14_Boom_controller+4
0x097E	0x7453 ;?ICS?lstr14_Boom_controller+6
0x0980	0x706F ;?ICS?lstr14_Boom_controller+8
0x0982	0x6570 ;?ICS?lstr14_Boom_controller+10
0x0984	0x2E64 ;?ICS?lstr14_Boom_controller+12
0x0986	0x00 ;?ICS?lstr14_Boom_controller+14
; end of ?ICS?lstr14_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr16_Boom_controller
0x0987	0x7254 ;?ICS?lstr16_Boom_controller+0
0x0989	0x6961 ;?ICS?lstr16_Boom_controller+2
0x098B	0x206E ;?ICS?lstr16_Boom_controller+4
0x098D	0x6150 ;?ICS?lstr16_Boom_controller+6
0x098F	0x7373 ;?ICS?lstr16_Boom_controller+8
0x0991	0x6465 ;?ICS?lstr16_Boom_controller+10
0x0993	0x00 ;?ICS?lstr16_Boom_controller+12
; end of ?ICS?lstr16_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr13_Boom_controller
0x0994	0x6E6F ;?ICS?lstr13_Boom_controller+0
0x0996	0x7420 ;?ICS?lstr13_Boom_controller+2
0x0998	0x6568 ;?ICS?lstr13_Boom_controller+4
0x099A	0x6220 ;?ICS?lstr13_Boom_controller+6
0x099C	0x6972 ;?ICS?lstr13_Boom_controller+8
0x099E	0x6764 ;?ICS?lstr13_Boom_controller+10
0x09A0	0x2165 ;?ICS?lstr13_Boom_controller+12
0x09A2	0x00 ;?ICS?lstr13_Boom_controller+14
; end of ?ICS?lstr13_Boom_controller
;Boom_controller.c,0 :: ?ICS?lstr12_Boom_controller
0x09A3	0x6854 ;?ICS?lstr12_Boom_controller+0
0x09A5	0x7265 ;?ICS?lstr12_Boom_controller+2
0x09A7	0x2765 ;?ICS?lstr12_Boom_controller+4
0x09A9	0x2073 ;?ICS?lstr12_Boom_controller+6
0x09AB	0x2061 ;?ICS?lstr12_Boom_controller+8
0x09AD	0x6163 ;?ICS?lstr12_Boom_controller+10
0x09AF	0x0072 ;?ICS?lstr12_Boom_controller+12
; end of ?ICS?lstr12_Boom_controller
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0008      [50]    _interrupt
0x003A      [12]    _Delay_50us
0x0046      [18]    _Delay_5500us
0x0058       [4]    _Delay_1us
0x005C     [126]    _Lcd_Cmd
0x00DA      [54]    _Div_16x16_U
0x0110      [88]    _Div_16x16_S_L
0x0168     [146]    _WordToStr
0x01FA      [14]    _Lcd_Chr_CP
0x0208     [198]    _Div_16x16_S
0x02CE     [218]    _IntToStr
0x03A8     [126]    _Lcd_Out
0x0426     [152]    _Lcd_Init
0x04BE      [16]    ___CC2DW
0x04CE      [46]    _write_LCD
0x04FC     [240]    _countdown
0x05EC      [66]    _tf_stop
0x062E     [708]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    FLASH_Erase_64_SaveINTCON_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATSda_temp_sda_L0
0x0000       [1]    __Lib_SoftI2C_PutZerosToLATScl_temp_scl_L0
0x0000       [1]    EEPROM_Write_SaveINTCON_L0
0x0000       [1]    UART1_Init_tmp_L0
0x0000       [1]    SPI1_Write_tmp_L0
0x0000       [1]    R0
0x0001       [1]    ispunct_rslt_L0
0x0001       [1]    R1
0x0001       [1]    I2C1_Rd_tmp_L0
0x0001       [1]    FLASH_Erase_Write_64_i_L0
0x0001       [1]    FLASH_Write_32_i_L0
0x0001       [1]    __Lib_PS2_Wait_Falling_nsample_L0
0x0001       [2]    FLASH_Read_N_Bytes_i_L0
0x0002       [2]    memchr_s_L0
0x0002       [2]    memcpy_dd_L0
0x0002       [1]    FLASH_Write_32_SaveINTCON_L0
0x0002       [2]    memset_pp_L0
0x0002       [1]    R2
0x0002       [2]    strlen_cp_L0
0x0002       [1]    FLASH_Erase_Write_64_j_L0
0x0003       [2]    memmove_tt_L0
0x0003       [1]    FLASH_Erase_Write_64_SaveINTCON_L0
0x0003       [1]    R3
0x0004       [1]    R4
0x0004       [2]    strcat_cp_L0
0x0004       [2]    frexp_pom_L0
0x0004       [2]    strncpy_cp_L0
0x0004       [2]    memcpy_ss_L0
0x0004       [2]    strcpy_cp_L0
0x0004       [2]    strncat_cp_L0
0x0005       [1]    R5
0x0005       [2]    memmove_ff_L0
0x0006       [1]    R6
0x0007       [1]    R7
0x0008       [1]    R8
0x0009       [1]    R9
0x000A       [1]    R10
0x000B       [1]    R11
0x000C       [1]    R12
0x000D       [1]    R13
0x000E       [1]    R14
0x000F       [1]    R15
0x0010       [1]    R16
0x0011       [1]    R17
0x0012       [1]    R18
0x0013       [1]    R19
0x0014       [1]    R20
0x0016      [17]    ?lstr3_Boom_controller
0x0027       [9]    ?lstr2_Boom_controller
0x0030       [7]    ?lstr4_Boom_controller
0x0037       [2]    ?lstr5_Boom_controller
0x0039       [9]    ?lstr1_Boom_controller
0x0042      [17]    ?lstr10_Boom_controller
0x0053       [7]    ?lstr7_Boom_controller
0x005A      [15]    ?lstr8_Boom_controller
0x0069      [11]    ?lstr9_Boom_controller
0x0074      [10]    ?lstr6_Boom_controller
0x007E      [14]    ?lstr11_Boom_controller
0x008C      [16]    ?lstr15_Boom_controller
0x009C      [15]    ?lstr14_Boom_controller
0x00AB      [13]    ?lstr16_Boom_controller
0x00B8      [15]    ?lstr13_Boom_controller
0x00C7      [14]    ?lstr12_Boom_controller
0x00D5       [1]    _i
0x00D6       [1]    _units
0x00D7       [1]    _tens
0x00D8       [1]    _countDwn
0x00D9       [0]    _car_off_flag
0x00D9       [0]    _car_appr_flag
0x00D9       [0]    _car_bridge_flag
0x00D9       [0]    _LCDWriteFlag
0x00D9       [0]    _tr_appr_flag
0x00D9       [0]    _tr_warn_flag
0x00D9       [0]    _tr_off_flag
0x00D9       [0]    _tr_bridge_flag
0x00DA       [2]    _proc_timer
0x00DC       [0]    _tr_stop_flag
0x00DC       [0]    __Lib_Lcd_cmd_status
0x00DC       [0]    _tf_stop_flag
0x00DD       [2]    FARG_countdown_countD
0x00DF       [7]    countdown_counting_L0
0x00E6       [2]    FLOC__countdown
0x00E8       [2]    FARG_IntToStr_input
0x00E8       [1]    FARG_Lcd_Out_row
0x00E9       [1]    FARG_Lcd_Out_column
0x00EA       [2]    FARG_IntToStr_output
0x00EA       [2]    FARG_Lcd_Out_text
0x00EC       [1]    Lcd_Out_i_L0
0x00EC       [2]    IntToStr_i_L0
0x00EE       [2]    IntToStr_negative_L0
0x00F0       [2]    IntToStr_inword_L0
0x00F2       [1]    FARG_Lcd_Chr_CP_out_char
0x00F2       [2]    FARG_WordToStr_input
0x00F4       [2]    FARG_WordToStr_output
0x00F6       [1]    WordToStr_len_L0
0x00F7       [2]    FLOC__WordToStr
0x00F9       [1]    FARG_Lcd_Cmd_out_char
0x0F80       [0]    NOT_SS_bit
0x0F80       [1]    PORTA
0x0F80       [0]    CVREF_bit
0x0F80       [0]    RA0_bit
0x0F80       [0]    LVDIN_bit
0x0F80       [0]    RA4_bit
0x0F80       [0]    RA5_bit
0x0F80       [0]    RA6_bit
0x0F80       [0]    RA1_bit
0x0F80       [0]    RA2_bit
0x0F80       [0]    RA3_bit
0x0F80       [0]    OSC2_bit
0x0F80       [0]    AN4_bit
0x0F80       [0]    VREFN_bit
0x0F80       [0]    OSC1_bit
0x0F80       [0]    AN2_bit
0x0F80       [0]    AN1_bit
0x0F80       [0]    T0CKI_bit
0x0F80       [0]    AN3_bit
0x0F80       [0]    tr_stop
0x0F80       [0]    CLKO_bit
0x0F80       [0]    tf_amber
0x0F80       [0]    CLKI_bit
0x0F80       [0]    tf_red
0x0F80       [0]    VREFP_bit
0x0F80       [0]    AN0_bit
0x0F80       [0]    SS_bit
0x0F80       [0]    tf_green
0x0F80       [0]    RA7_bit
0x0F81       [0]    INT2_bit
0x0F81       [0]    INT1_bit
0x0F81       [1]    PORTB
0x0F81       [0]    CCP2_PORTB_bit
0x0F81       [0]    KBI1_bit
0x0F81       [0]    tr_warn
0x0F81       [0]    PGD_bit
0x0F81       [0]    KBI0_bit
0x0F81       [0]    RB5_bit
0x0F81       [0]    RB2_bit
0x0F81       [0]    RB3_bit
0x0F81       [0]    RB4_bit
0x0F81       [0]    RB7_bit
0x0F81       [0]    INT0_bit
0x0F81       [0]    RB6_bit
0x0F81       [0]    RB1_bit
0x0F81       [0]    PGC_bit
0x0F81       [0]    tr_appr
0x0F81       [0]    AN10_bit
0x0F81       [0]    tr_off
0x0F81       [0]    AN9_bit
0x0F81       [0]    RB0_bit
0x0F81       [0]    car_off
0x0F81       [0]    car_bridge
0x0F81       [0]    AN8_bit
0x0F81       [0]    AN11_bit
0x0F81       [0]    KBI3_bit
0x0F81       [0]    tr_bridge
0x0F81       [0]    PGM_bit
0x0F81       [0]    KBI2_bit
0x0F81       [0]    car_appr
0x0F81       [0]    AN12_bit
0x0F82       [0]    boom_down
0x0F82       [0]    RC4_bit
0x0F82       [0]    T1CKI_bit
0x0F82       [1]    PORTC
0x0F82       [0]    SDA_bit
0x0F82       [0]    CK_bit
0x0F82       [0]    RC7_bit
0x0F82       [0]    RC2_bit
0x0F82       [0]    boom_up
0x0F82       [0]    RC0_bit
0x0F82       [0]    RC3_bit
0x0F82       [0]    RC1_bit
0x0F82       [0]    RC5_bit
0x0F82       [0]    SCK_bit
0x0F82       [0]    SDI_bit
0x0F82       [0]    CCP1_bit
0x0F82       [0]    RC6_bit
0x0F82       [0]    T1OSO_bit
0x0F82       [0]    T1OSI_bit
0x0F82       [0]    SDO_bit
0x0F82       [0]    T13CKI_bit
0x0F82       [0]    SCL_bit
0x0F82       [0]    CCP2_PORTC_bit
0x0F82       [0]    RX__bit
0x0F82       [0]    TX_bit
0x0F83       [0]    RD2_bit
0x0F83       [0]    RD3_bit
0x0F83       [0]    RD0_bit
0x0F83       [0]    RD4_bit
0x0F83       [0]    RD5_bit
0x0F83       [0]    RD7_bit
0x0F83       [0]    RD1_bit
0x0F83       [0]    RD6_bit
0x0F83       [0]    LCD_D4
0x0F83       [0]    PSP5_bit
0x0F83       [0]    LCD_D5
0x0F83       [0]    PSP4_bit
0x0F83       [0]    LCD_EN
0x0F83       [0]    PSP7_bit
0x0F83       [0]    P1B_bit
0x0F83       [0]    PSP6_bit
0x0F83       [0]    LCD_RS
0x0F83       [0]    seg_tens
0x0F83       [0]    PSP0_bit
0x0F83       [1]    PORTD
0x0F83       [0]    seg_units
0x0F83       [0]    PSP1_bit
0x0F83       [0]    LCD_D6
0x0F83       [0]    PSP3_bit
0x0F83       [0]    LCD_D7
0x0F83       [0]    PSP2_bit
0x0F83       [0]    P1D_bit
0x0F83       [0]    P1C_bit
0x0F84       [0]    AN7_bit
0x0F84       [0]    RE0_bit
0x0F84       [0]    AN5_bit
0x0F84       [0]    AN6_bit
0x0F84       [1]    PORTE
0x0F84       [0]    RE3_bit
0x0F84       [0]    RE1_bit
0x0F84       [0]    RE2_bit
0x0F84       [0]    VPP_bit
0x0F84       [0]    CS_bit
0x0F84       [0]    MCLR_bit
0x0F84       [0]    RD_bit
0x0F84       [0]    WR_bit
0x0F84       [0]    NOT_CS_bit
0x0F84       [0]    NOT_MCLR_bit
0x0F84       [0]    NOT_RD_bit
0x0F84       [0]    NOT_WR_bit
0x0F89       [0]    LATA2_bit
0x0F89       [0]    LATA3_bit
0x0F89       [0]    LATA1_bit
0x0F89       [1]    LATA
0x0F89       [0]    LATA0_bit
0x0F89       [0]    LATA4_bit
0x0F89       [0]    LATA7_bit
0x0F89       [0]    LATA6_bit
0x0F89       [0]    LATA5_bit
0x0F8A       [0]    LATB5_bit
0x0F8A       [0]    LATB7_bit
0x0F8A       [1]    LATB
0x0F8A       [0]    LATB6_bit
0x0F8A       [0]    LATB1_bit
0x0F8A       [0]    LATB2_bit
0x0F8A       [0]    LATB3_bit
0x0F8A       [0]    LATB0_bit
0x0F8A       [0]    LATB4_bit
0x0F8B       [1]    LATC
0x0F8B       [0]    LATC0_bit
0x0F8B       [0]    LATC3_bit
0x0F8B       [0]    LATC7_bit
0x0F8B       [0]    LATC2_bit
0x0F8B       [0]    LATC5_bit
0x0F8B       [0]    LATC1_bit
0x0F8B       [0]    LATC4_bit
0x0F8B       [0]    LATC6_bit
0x0F8C       [0]    LATD2_bit
0x0F8C       [0]    LATD7_bit
0x0F8C       [0]    LATD1_bit
0x0F8C       [0]    LATD6_bit
0x0F8C       [0]    LATD3_bit
0x0F8C       [0]    LATD4_bit
0x0F8C       [0]    LATD5_bit
0x0F8C       [0]    LATD0_bit
0x0F8C       [1]    LATD
0x0F8D       [1]    LATE
0x0F8D       [0]    LATE0_bit
0x0F8D       [0]    LATE2_bit
0x0F8D       [0]    LATE1_bit
0x0F92       [0]    TRISA1_bit
0x0F92       [0]    TRISA2_bit
0x0F92       [0]    TRISA7_bit
0x0F92       [0]    TRISA0_bit
0x0F92       [0]    TRISA4_bit
0x0F92       [0]    TRISA5_bit
0x0F92       [1]    TRISA
0x0F92       [0]    TRISA3_bit
0x0F92       [0]    TRISA6_bit
0x0F93       [0]    TRISB2_bit
0x0F93       [0]    TRISB3_bit
0x0F93       [0]    TRISB0_bit
0x0F93       [0]    TRISB1_bit
0x0F93       [0]    TRISB4_bit
0x0F93       [1]    TRISB
0x0F93       [0]    TRISB7_bit
0x0F93       [0]    TRISB5_bit
0x0F93       [0]    TRISB6_bit
0x0F94       [0]    TRISC0_bit
0x0F94       [0]    TRISC3_bit
0x0F94       [0]    TRISC5_bit
0x0F94       [0]    TRISC7_bit
0x0F94       [0]    TRISC4_bit
0x0F94       [0]    TRISC1_bit
0x0F94       [0]    TRISC6_bit
0x0F94       [0]    TRISC2_bit
0x0F94       [1]    TRISC
0x0F95       [0]    TRISD5_bit
0x0F95       [0]    TRISD3_bit
0x0F95       [0]    TRISD1_bit
0x0F95       [0]    LCD_D7_Direction
0x0F95       [0]    LCD_EN_Direction
0x0F95       [0]    TRISD2_bit
0x0F95       [0]    LCD_RS_Direction
0x0F95       [0]    LCD_D6_Direction
0x0F95       [0]    LCD_D4_Direction
0x0F95       [0]    TRISD6_bit
0x0F95       [1]    TRISD
0x0F95       [0]    TRISD7_bit
0x0F95       [0]    TRISD4_bit
0x0F95       [0]    TRISD0_bit
0x0F95       [0]    LCD_D5_Direction
0x0F96       [0]    IBOV_TRISE_bit
0x0F96       [0]    TRISE2_bit
0x0F96       [0]    IBOV_bit
0x0F96       [1]    TRISE
0x0F96       [0]    PSPMODE_bit
0x0F96       [0]    IBF_TRISE_bit
0x0F96       [0]    OBF_TRISE_bit
0x0F96       [0]    TRISE0_bit
0x0F96       [0]    PSPMODE_TRISE_bit
0x0F96       [0]    TRISE1_bit
0x0F96       [0]    OBF_bit
0x0F96       [0]    IBF_bit
0x0F9B       [1]    OSCTUNE
0x0F9B       [0]    TUN2_bit
0x0F9B       [0]    TUN1_bit
0x0F9B       [0]    TUN0_bit
0x0F9B       [0]    TUN3_bit
0x0F9B       [0]    INTSRC_bit
0x0F9B       [0]    PLLEN_bit
0x0F9B       [0]    TUN4_bit
0x0F9D       [0]    PSPIE_bit
0x0F9D       [0]    TMR2IE_bit
0x0F9D       [0]    TXIE_bit
0x0F9D       [0]    SSPIE_bit
0x0F9D       [0]    CCP1IE_bit
0x0F9D       [1]    PIE1
0x0F9D       [0]    ADIE_bit
0x0F9D       [0]    TMR1IE_bit
0x0F9D       [0]    RCIE_bit
0x0F9E       [0]    TXIF_bit
0x0F9E       [0]    TMR2IF_bit
0x0F9E       [0]    TMR1IF_bit
0x0F9E       [0]    CCP1IF_bit
0x0F9E       [0]    SSPIF_bit
0x0F9E       [1]    PIR1
0x0F9E       [0]    PSPIF_bit
0x0F9E       [0]    ADIF_bit
0x0F9E       [0]    RCIF_bit
0x0F9F       [0]    ADIP_bit
0x0F9F       [0]    SSPIP_bit
0x0F9F       [0]    TXIP_bit
0x0F9F       [0]    RCIP_bit
0x0F9F       [0]    PSPIP_bit
0x0F9F       [0]    TMR1IP_bit
0x0F9F       [1]    IPR1
0x0F9F       [0]    CCP1IP_bit
0x0F9F       [0]    TMR2IP_bit
0x0FA0       [0]    TMR3IE_bit
0x0FA0       [0]    HLVDIE_bit
0x0FA0       [1]    PIE2
0x0FA0       [0]    OSCFIE_bit
0x0FA0       [0]    LVDIE_bit
0x0FA0       [0]    CMIE_bit
0x0FA0       [0]    BCLIE_bit
0x0FA0       [0]    EEIE_bit
0x0FA0       [0]    CCP2IE_bit
0x0FA1       [0]    CCP2IF_bit
0x0FA1       [0]    CMIF_bit
0x0FA1       [0]    LVDIF_bit
0x0FA1       [0]    OSCFIF_bit
0x0FA1       [0]    BCLIF_bit
0x0FA1       [0]    EEIF_bit
0x0FA1       [0]    TMR3IF_bit
0x0FA1       [0]    HLVDIF_bit
0x0FA1       [1]    PIR2
0x0FA2       [0]    CCP2IP_bit
0x0FA2       [0]    EEIP_bit
0x0FA2       [0]    OSCFIP_bit
0x0FA2       [0]    HLVDIP_bit
0x0FA2       [0]    LVDIP_bit
0x0FA2       [0]    BCLIP_bit
0x0FA2       [0]    TMR3IP_bit
0x0FA2       [1]    IPR2
0x0FA2       [0]    CMIP_bit
0x0FA6       [0]    FREE_bit
0x0FA6       [0]    WR_EECON1_bit
0x0FA6       [0]    CFGS_bit
0x0FA6       [0]    RD_EECON1_bit
0x0FA6       [0]    WREN_bit
0x0FA6       [0]    WRERR_bit
0x0FA6       [1]    EECON1
0x0FA6       [0]    EEPGD_bit
0x0FA7       [1]    EECON2
0x0FA8       [1]    EEDATA
0x0FA9       [1]    EEADR
0x0FAB       [0]    ADEN_bit
0x0FAB       [0]    CREN_bit
0x0FAB       [0]    FERR_bit
0x0FAB       [0]    RX9D_bit
0x0FAB       [0]    OERR_bit
0x0FAB       [0]    ADDEN_bit
0x0FAB       [1]    RCSTA
0x0FAB       [0]    RX9_bit
0x0FAB       [0]    SPEN_bit
0x0FAB       [0]    SREN_bit
0x0FAC       [0]    TX9_bit
0x0FAC       [0]    TXEN_bit
0x0FAC       [1]    TXSTA
0x0FAC       [0]    CSRC_bit
0x0FAC       [0]    SYNC_bit
0x0FAC       [0]    TRMT_bit
0x0FAC       [0]    TX9D_bit
0x0FAC       [0]    SENDB_bit
0x0FAC       [0]    BRGH_bit
0x0FAD       [1]    TXREG
0x0FAE       [1]    RCREG
0x0FAF       [1]    SPBRG
0x0FB0       [1]    SPBRGH
0x0FB1       [0]    NOT_T3SYNC_bit
0x0FB1       [1]    T3CON
0x0FB1       [0]    RD16_bit
0x0FB1       [0]    T3CCP1_bit
0x0FB1       [0]    T3CKPS0_bit
0x0FB1       [0]    T3SYNC_bit
0x0FB1       [0]    TMR3ON_bit
0x0FB1       [0]    TMR3CS_bit
0x0FB1       [0]    T3CCP2_bit
0x0FB1       [0]    T3CKPS1_bit
0x0FB2       [1]    TMR3L
0x0FB3       [1]    TMR3H
0x0FB4       [1]    CMCON
0x0FB4       [0]    CM2_bit
0x0FB4       [0]    CIS_bit
0x0FB4       [0]    CM0_bit
0x0FB4       [0]    CM1_bit
0x0FB4       [0]    C1OUT_bit
0x0FB4       [0]    C2OUT_bit
0x0FB4       [0]    C1INV_bit
0x0FB4       [0]    C2INV_bit
0x0FB5       [1]    CVRCON
0x0FB5       [0]    CVRR_bit
0x0FB5       [0]    CVRSS_bit
0x0FB5       [0]    CVREN_bit
0x0FB5       [0]    CVROE_bit
0x0FB5       [0]    CVR1_bit
0x0FB5       [0]    CVR0_bit
0x0FB5       [0]    CVR3_bit
0x0FB5       [0]    CVR2_bit
0x0FB6       [0]    PSSBD0_bit
0x0FB6       [0]    ECCPAS0_bit
0x0FB6       [0]    ECCPAS1_bit
0x0FB6       [0]    PSSAC0_bit
0x0FB6       [0]    PSSAC1_bit
0x0FB6       [0]    ECCPAS2_bit
0x0FB6       [1]    ECCP1AS
0x0FB6       [0]    PSSBD1_bit
0x0FB6       [0]    ECCPASE_bit
0x0FB7       [1]    PWM1CON
0x0FB7       [0]    PDC4_bit
0x0FB7       [0]    PDC3_bit
0x0FB7       [0]    PDC5_bit
0x0FB7       [0]    PRSEN_bit
0x0FB7       [0]    PDC6_bit
0x0FB7       [0]    PDC0_bit
0x0FB7       [0]    PDC1_bit
0x0FB7       [0]    PDC2_bit
0x0FB8       [0]    WUE_bit
0x0FB8       [0]    BRG16_bit
0x0FB8       [0]    ABDEN_bit
0x0FB8       [1]    BAUDCON
0x0FB8       [1]    BAUDCTL
0x0FB8       [0]    SCKP_bit
0x0FB8       [0]    RXDTP_bit
0x0FB8       [0]    RCMT_bit
0x0FB8       [0]    TXCKP_bit
0x0FB8       [0]    RCIDL_bit
0x0FB8       [0]    ABDOVF_bit
0x0FBA       [0]    CCP2Y_bit
0x0FBA       [0]    DC2B1_bit
0x0FBA       [1]    CCP2CON
0x0FBA       [0]    CCP2X_bit
0x0FBA       [0]    DC2B0_bit
0x0FBA       [0]    CCP2M1_bit
0x0FBA       [0]    CCP2M2_bit
0x0FBA       [0]    CCP2M3_bit
0x0FBA       [0]    CCP2M0_bit
0x0FBB       [1]    CCPR2L
0x0FBB       [2]    CCPR2
0x0FBC       [1]    CCPR2H
0x0FBD       [1]    CCP1CON
0x0FBD       [0]    P1M0_bit
0x0FBD       [0]    DC1B1_bit
0x0FBD       [0]    P1M1_bit
0x0FBD       [0]    CCP1X_bit
0x0FBD       [0]    CCP1Y_bit
0x0FBD       [0]    CCP1M1_bit
0x0FBD       [0]    CCP1M0_bit
0x0FBD       [0]    CCP1M2_bit
0x0FBD       [0]    DC1B0_bit
0x0FBD       [0]    CCP1M3_bit
0x0FBE       [1]    CCPR1L
0x0FBE       [2]    CCPR1
0x0FBF       [1]    CCPR1H
0x0FC0       [0]    ADCS1_bit
0x0FC0       [0]    ADCS2_bit
0x0FC0       [0]    ACQT1_bit
0x0FC0       [0]    ADCS0_bit
0x0FC0       [0]    ACQT0_bit
0x0FC0       [0]    ACQT2_bit
0x0FC0       [0]    ADFM_bit
0x0FC0       [1]    ADCON2
0x0FC1       [0]    PCFG0_bit
0x0FC1       [1]    ADCON1
0x0FC1       [0]    VCFG0_bit
0x0FC1       [0]    PCFG3_bit
0x0FC1       [0]    PCFG2_bit
0x0FC1       [0]    VCFG1_bit
0x0FC1       [0]    PCFG1_bit
0x0FC2       [0]    CHS3_bit
0x0FC2       [0]    CHS2_bit
0x0FC2       [0]    CHS0_bit
0x0FC2       [0]    CHS1_bit
0x0FC2       [0]    ADON_bit
0x0FC2       [0]    GO_bit
0x0FC2       [0]    DONE_bit
0x0FC2       [1]    ADCON0
0x0FC2       [0]    GO_DONE_bit
0x0FC2       [0]    NOT_DONE_bit
0x0FC3       [1]    ADRESL
0x0FC3       [2]    ADRES
0x0FC4       [1]    ADRESH
0x0FC5       [0]    RCEN_bit
0x0FC5       [0]    ACKEN_bit
0x0FC5       [0]    PEN_bit
0x0FC5       [0]    RSEN_bit
0x0FC5       [0]    SEN_bit
0x0FC5       [0]    GCEN_bit
0x0FC5       [1]    SSPCON2
0x0FC5       [0]    ACKDT_bit
0x0FC5       [0]    ACKSTAT_bit
0x0FC6       [1]    SSPCON1
0x0FC6       [0]    CKP_bit
0x0FC6       [0]    SSPEN_bit
0x0FC6       [0]    SSPOV_bit
0x0FC6       [0]    SSPM3_bit
0x0FC6       [0]    SSPM0_bit
0x0FC6       [0]    SSPM1_bit
0x0FC6       [0]    SSPM2_bit
0x0FC6       [0]    WCOL_bit
0x0FC7       [0]    D_A_bit
0x0FC7       [0]    R_W_bit
0x0FC7       [1]    SSPSTAT
0x0FC7       [0]    NOT_WRITE_bit
0x0FC7       [0]    BF_bit
0x0FC7       [0]    NOT_ADDRESS_bit
0x0FC7       [0]    UA_bit
0x0FC7       [0]    R_bit
0x0FC7       [0]    CKE_bit
0x0FC7       [0]    NOT_W_bit
0x0FC7       [0]    SMP_bit
0x0FC7       [0]    D_bit
0x0FC7       [0]    S_bit
0x0FC7       [0]    P_bit
0x0FC7       [0]    NOT_A_bit
0x0FC8       [1]    SSPADD
0x0FC9       [1]    SSPBUF
0x0FCA       [1]    T2CON
0x0FCA       [0]    T2OUTPS0_bit
0x0FCA       [0]    T2OUTPS1_bit
0x0FCA       [0]    T2OUTPS3_bit
0x0FCA       [0]    T2OUTPS2_bit
0x0FCA       [0]    TMR2ON_bit
0x0FCA       [0]    T2CKPS1_bit
0x0FCA       [0]    T2CKPS0_bit
0x0FCB       [1]    PR2
0x0FCC       [1]    TMR2
0x0FCD       [0]    T1CKPS0_bit
0x0FCD       [0]    RD16_T1CON_bit
0x0FCD       [0]    NOT_T1SYNC_bit
0x0FCD       [0]    T1CKPS1_bit
0x0FCD       [0]    T1RUN_bit
0x0FCD       [0]    TMR1ON_bit
0x0FCD       [0]    T1OSCEN_bit
0x0FCD       [0]    T1SYNC_bit
0x0FCD       [0]    TMR1CS_bit
0x0FCD       [1]    T1CON
0x0FCE       [1]    TMR1L
0x0FCF       [1]    TMR1H
0x0FD0       [0]    BOR_bit
0x0FD0       [0]    NOT_PD_bit
0x0FD0       [0]    NOT_TO_bit
0x0FD0       [0]    IPEN_bit
0x0FD0       [0]    SBOREN_bit
0x0FD0       [1]    RCON
0x0FD0       [0]    NOT_POR_bit
0x0FD0       [0]    NOT_BOR_bit
0x0FD0       [0]    RI_bit
0x0FD0       [0]    PD_bit
0x0FD0       [0]    POR_bit
0x0FD0       [0]    NOT_RI_bit
0x0FD0       [0]    TO__bit
0x0FD1       [0]    SWDTEN_bit
0x0FD1       [0]    SWDTE_bit
0x0FD1       [1]    WDTCON
0x0FD2       [1]    LVDCON
0x0FD2       [1]    HLVDCON
0x0FD2       [0]    LVV0_bit
0x0FD2       [0]    IRVST_bit
0x0FD2       [0]    LVV2_bit
0x0FD2       [0]    LVV1_bit
0x0FD2       [0]    LVDEN_bit
0x0FD2       [0]    LVDL1_bit
0x0FD2       [0]    LVDL0_bit
0x0FD2       [0]    LVDL3_bit
0x0FD2       [0]    LVDL2_bit
0x0FD2       [0]    HLVDEN_bit
0x0FD2       [0]    HLVDL3_bit
0x0FD2       [0]    IVRST_bit
0x0FD2       [0]    VDIRMAG_bit
0x0FD2       [0]    HLVDL2_bit
0x0FD2       [0]    BGST_bit
0x0FD2       [0]    LVV3_bit
0x0FD2       [0]    HLVDL1_bit
0x0FD2       [0]    HLVDL0_bit
0x0FD3       [1]    OSCCON
0x0FD3       [0]    IRCF1_bit
0x0FD3       [0]    IRCF0_bit
0x0FD3       [0]    IDLEN_bit
0x0FD3       [0]    IRCF2_bit
0x0FD3       [0]    SCS1_bit
0x0FD3       [0]    SCS0_bit
0x0FD3       [0]    OSTS_bit
0x0FD3       [0]    IOFS_bit
0x0FD3       [0]    FLTS_bit
0x0FD5       [0]    T08BIT_bit
0x0FD5       [0]    T0CS_bit
0x0FD5       [1]    T0CON
0x0FD5       [0]    TMR0ON_bit
0x0FD5       [0]    T0SE_bit
0x0FD5       [0]    T0PS1_bit
0x0FD5       [0]    T0PS0_bit
0x0FD5       [0]    PSA_bit
0x0FD5       [0]    T0PS2_bit
0x0FD6       [1]    TMR0L
0x0FD7       [1]    TMR0H
0x0FD8       [0]    DC_bit
0x0FD8       [0]    C_bit
0x0FD8       [1]    STATUS
0x0FD8       [0]    N_bit
0x0FD8       [0]    OV_bit
0x0FD8       [0]    Z_bit
0x0FD9       [2]    FSR2PTR
0x0FD9       [1]    FSR2L
0x0FD9       [2]    FSR2
0x0FDA       [1]    FSR2H
0x0FDB       [1]    PLUSW2
0x0FDC       [1]    PREINC2
0x0FDD       [1]    POSTDEC2
0x0FDE       [1]    POSTINC2
0x0FDF       [1]    INDF2
0x0FE0       [1]    BSR
0x0FE1       [1]    FSR1L
0x0FE1       [2]    FSR1PTR
0x0FE1       [2]    FSR1
0x0FE2       [1]    FSR1H
0x0FE3       [1]    PLUSW1
0x0FE4       [1]    PREINC1
0x0FE5       [1]    POSTDEC1
0x0FE6       [1]    POSTINC1
0x0FE7       [1]    INDF1
0x0FE8       [1]    WREG
0x0FE9       [2]    FSR0
0x0FE9       [2]    FSR0PTR
0x0FE9       [1]    FSR0L
0x0FEA       [1]    FSR0H
0x0FEB       [1]    PLUSW0
0x0FEC       [1]    PREINC0
0x0FED       [1]    POSTDEC0
0x0FEE       [1]    POSTINC0
0x0FEF       [1]    INDF0
0x0FF0       [0]    INT1F_bit
0x0FF0       [0]    INT1IE_bit
0x0FF0       [0]    INT2IF_bit
0x0FF0       [0]    INT2IE_bit
0x0FF0       [0]    INT2IP_bit
0x0FF0       [0]    INT1IP_bit
0x0FF0       [0]    INT1IF_bit
0x0FF0       [0]    INT1E_bit
0x0FF0       [0]    INT2F_bit
0x0FF0       [0]    INT2E_bit
0x0FF0       [0]    INT2P_bit
0x0FF0       [0]    INT1P_bit
0x0FF0       [1]    INTCON3
0x0FF1       [0]    RBPU_bit
0x0FF1       [0]    NOT_RBPU_bit
0x0FF1       [1]    INTCON2
0x0FF1       [0]    INTEDG0_bit
0x0FF1       [0]    TMR0IP_bit
0x0FF1       [0]    INTEDG2_bit
0x0FF1       [0]    INTEDG1_bit
0x0FF1       [0]    RBIP_bit
0x0FF2       [0]    TMR0IF_bit
0x0FF2       [0]    INT0F_bit
0x0FF2       [0]    RBIF_bit
0x0FF2       [0]    RBIE_bit
0x0FF2       [0]    INT0IE_bit
0x0FF2       [0]    T0IF_bit
0x0FF2       [0]    T0IE_bit
0x0FF2       [0]    GIEH_bit
0x0FF2       [0]    GIEL_bit
0x0FF2       [0]    TMR0IE_bit
0x0FF2       [0]    INT0E_bit
0x0FF2       [0]    PEIE_bit
0x0FF2       [0]    INT0IF_bit
0x0FF2       [0]    GIE_bit
0x0FF2       [1]    INTCON
0x0FF3       [2]    PROD
0x0FF3       [1]    PRODL
0x0FF4       [1]    PRODH
0x0FF5       [1]    TABLAT
0x0FF6       [1]    TBLPTRL
0x0FF6       [3]    TBLPTR
0x0FF7       [1]    TBLPTRH
0x0FF8       [0]    TBLPTRU2_bit
0x0FF8       [1]    TBLPTRU
0x0FF8       [0]    TBLPTRU0_bit
0x0FF8       [0]    TBLPTRU1_bit
0x0FF8       [0]    TBLPTRU4_bit
0x0FF8       [0]    ACSS_bit
0x0FF8       [0]    TBLPTRU3_bit
0x0FF9       [1]    PCL
0x0FF9       [1]    PC
0x0FFA       [1]    PCLATH
0x0FFB       [0]    PCU4_bit
0x0FFB       [0]    PCU3_bit
0x0FFB       [0]    PCU2_bit
0x0FFB       [1]    PCLATU
0x0FFB       [0]    PCU0_bit
0x0FFB       [0]    PCU1_bit
0x0FFC       [0]    STKOVF_bit
0x0FFC       [0]    SP1_bit
0x0FFC       [0]    SP2_bit
0x0FFC       [1]    STKPTR
0x0FFC       [0]    SP0_bit
0x0FFC       [0]    STKUNF_bit
0x0FFC       [0]    STKFUL_bit
0x0FFC       [0]    SP3_bit
0x0FFC       [0]    SP4_bit
0x0FFD       [1]    TOS
0x0FFD       [1]    TOSL
0x0FFE       [1]    TOSH
0x0FFF       [1]    TOSU
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x08F2      [17]    ?ICS?lstr3_Boom_controller
0x0903       [9]    ?ICS?lstr2_Boom_controller
0x090C       [7]    ?ICS?lstr4_Boom_controller
0x0913       [2]    ?ICS?lstr5_Boom_controller
0x0915       [9]    ?ICS?lstr1_Boom_controller
0x091E      [17]    ?ICS?lstr10_Boom_controller
0x092F       [7]    ?ICS?lstr7_Boom_controller
0x0936      [15]    ?ICS?lstr8_Boom_controller
0x0945      [11]    ?ICS?lstr9_Boom_controller
0x0950      [10]    ?ICS?lstr6_Boom_controller
0x095A      [14]    ?ICS?lstr11_Boom_controller
0x0968      [16]    ?ICS?lstr15_Boom_controller
0x0978      [15]    ?ICS?lstr14_Boom_controller
0x0987      [13]    ?ICS?lstr16_Boom_controller
0x0994      [15]    ?ICS?lstr13_Boom_controller
0x09A3      [14]    ?ICS?lstr12_Boom_controller
//** Label List: ** 
//----------------------------------------------
  L_testseg0
  L_countdown1
  L_countdown2
  L_countdown3
  L_countdown4
  L_countdown5
  L_tf_test6
  L_tf_stop7
  L_tf_stop8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_interrupt43
  L_interrupt44
  L_interrupt45
  L__main46
  L__main47
  L__main48
  L__main49
  _write_LCD
  _init_seg
  _testseg
  _countdown
  _tf_test
  _tf_stop
  _main
  L__main50
  L__main51
  L__main52
  L__main53
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  _interrupt
  L__interrupt62
  L__interrupt63
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_ShortToStr12
  L_ShortToStr13
  L_ShortToStr14
  L_ShortToStr15
  L_ShortToStr16
  L_ShortToStr17
  L_IntToStr18
  L_IntToStr19
  L_IntToStr20
  L_IntToStr21
  L_IntToStr22
  L_IntToStr23
  L_LongWordToStr24
  L_LongWordToStr25
  L_LongWordToStr26
  L_LongWordToStr27
  L_LongWordToStr28
  L_LongWordToStr29
  L_LongToStr30
  L_LongToStr31
  L_LongToStr32
  L_LongToStr33
  L_LongToStr34
  L_LongToStr35
  L_Dec2Bcd36
  L_Dec2Bcd37
  L_rtrim38
  L_rtrim39
  L_FloatToStr40
  L_FloatToStr41
  L_FloatToStr42
  L_FloatToStr43
  L_FloatToStr44
  L_FloatToStr45
  L_FloatToStr46
  L_FloatToStr47
  L_FloatToStr48
  L_FloatToStr49
  L_FloatToStr50
  L_FloatToStr51
  L_FloatToStr52
  L_FloatToStr53
  L_FloatToStr54
  L_FloatToStr55
  L_FloatToStr56
  L_FloatToStr57
  L_FloatToStr58
  L_FloatToStr59
  L_FloatToStr60
  L_FloatToStr61
  L__FloatToStr62
  _ByteToStr
  _WordToStr
  L__WordToStr63
  _ShortToStr
  L__ShortToStr64
  _IntToStr
  L__IntToStr65
  L__IntToStr66
  _LongWordToStr
  L__LongWordToStr67
  L__LongWordToStr68
  _LongToStr
  L__LongToStr69
  L__LongToStr70
  _Dec2Bcd
  _Bcd2Dec16
  L__Bcd2Dec1671
  L__Bcd2Dec1672
  _Dec2Bcd16
  L__Dec2Bcd1673
  L__Dec2Bcd1674
  _rtrim
  _FloatToStr
  L__FloatToStr75
  L__FloatToStr76
  L__FloatToStr77
  L__FloatToStr78
  L__FloatToStr79
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_100ms7
  L_Delay_10ms8
  L_Delay_1sec9
  L____Boot_Delay4k10
  L____Boot_Delay8k11
  L____Boot_Delay12k12
  L____Boot_Delay16k13
  L____Boot_Delay24k14
  L____Boot_Delay32k15
  L____Boot_Delay48k16
  L____Boot_Delay64k17
  L____Boot_Delay128k18
  L_Delay_Cyc19
  L_Delay_Cyc20
  L_VDelay_ms21
  L_VDelay_ms22
  L_VDelay_ms23
  L_VDelay_Advanced_ms24
  L_VDelay_Advanced_ms25
  L_VDelay_Advanced_ms26
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_100ms
  _Delay_10ms
  _Delay_1sec
  ____Boot_Delay4k
  ____Boot_Delay8k
  ____Boot_Delay12k
  ____Boot_Delay16k
  ____Boot_Delay24k
  ____Boot_Delay32k
  ____Boot_Delay48k
  ____Boot_Delay64k
  ____Boot_Delay128k
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms27
  L__VDelay_ms28
  L__VDelay_ms29
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms30
  L__VDelay_Advanced_ms31
  L__VDelay_Advanced_ms32
  L_Lcd_Cmd0
  L_Lcd_Cmd1
  L_Lcd_Out_CP2
  L_Lcd_Out_CP3
  L_Lcd_Chr4
  L_Lcd_Chr5
  L_Lcd_Chr6
  L_Lcd_Chr7
  L_Lcd_Chr8
  L_Lcd_Chr9
  L_Lcd_Chr10
  L_Lcd_Out11
  L_Lcd_Out12
  L_Lcd_Out13
  L_Lcd_Out14
  L_Lcd_Out15
  L_Lcd_Out16
  L_Lcd_Out17
  L_Lcd_Out18
  L_Lcd_Out19
  _Lcd_Cmd
  L__Lcd_Cmd20
  L__Lcd_Cmd21
  L__Lcd_Cmd22
  L__Lcd_Cmd23
  L__Lcd_Cmd24
  L__Lcd_Cmd25
  L__Lcd_Cmd26
  L__Lcd_Cmd27
  L__Lcd_Cmd28
  L__Lcd_Cmd29
  L__Lcd_Cmd30
  L__Lcd_Cmd31
  L__Lcd_Cmd32
  L__Lcd_Cmd33
  L__Lcd_Cmd34
  L__Lcd_Cmd35
  L__Lcd_Cmd36
  L__Lcd_Cmd37
  L__Lcd_Cmd38
  L__Lcd_Cmd39
  _Lcd_Chr_CP
  _Lcd_Out_CP
  _Lcd_Chr
  _Lcd_Init
  _Lcd_Out
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Div_8x8_U
  _Div_16x16_U
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _Mul_8x8_S
  _Mul_16x16_U
  _Mul_16x16_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _CC2DL_Loop1
  L_longjmp2
  ___CC2D
  ___CC2DW
  _____DoIFC
  _Swap
  _setjmp
  _longjmp
  L_testseg0
  L_countdown1
  L_countdown2
  L_countdown3
  L_countdown4
  L_countdown5
  L_tf_test6
  L_tf_stop7
  L_tf_stop8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_main24
  L_main25
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_interrupt43
  L_interrupt44
  L_interrupt45
  L__main46
  L__main47
  L__main48
  L__main49
  _write_LCD
  _init_seg
  _testseg
  _countdown
  _tf_test
  _tf_stop
  _main
  L__main50
  L__main51
  L__main52
  L__main53
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  _interrupt
  L__interrupt62
  L__interrupt63
