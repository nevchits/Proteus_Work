;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 07-Nov-12 03:25:15
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29B8      	GOTO       440
_Mul_16x16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0003	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0004	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0005	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0006	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x0007	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x0008	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x0009	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x000A	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x000B	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x000C	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x000D	0x2817      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x000E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x000F	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0010	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0011	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0012	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0013	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0014	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0015	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0016	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x0017	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x0018	0x281F      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x0019	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x001A	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x001B	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x001C	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x001D	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x001E	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x001F	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0020	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0021	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0022	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0023	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0024	0x280A      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0025	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0026	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x0027	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x0028	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x0029	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x002A	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x002B	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x002C	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
0x002D	0x0008      	RETURN
; end of _Mul_16x16_U
_Mul_32x32_U:
;__Lib_Math.c,1771 :: 		
;__Lib_Math.c,1786 :: 		
0x002E	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,1787 :: 		
0x002F	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,1788 :: 		
0x0030	0x3022      	MOVLW      34
;__Lib_Math.c,1789 :: 		
0x0031	0x00FC      	MOVWF      R12
;__Lib_Math.c,1790 :: 		
0x0032	0x01F8      	CLRF       R8
;__Lib_Math.c,1791 :: 		
0x0033	0x01F9      	CLRF       R9
;__Lib_Math.c,1792 :: 		
0x0034	0x01FA      	CLRF       R10
;__Lib_Math.c,1793 :: 		
0x0035	0x01FB      	CLRF       R11
;__Lib_Math.c,1795 :: 		
_NEXT:
;__Lib_Math.c,1799 :: 		
0x0036	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1800 :: 		
0x0037	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1801 :: 		
0x0038	0x2864      	GOTO       _EXIT2
;__Lib_Math.c,1802 :: 		
0x0039	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,1804 :: 		
_LOOP:
;__Lib_Math.c,1813 :: 		
0x003A	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,1814 :: 		
0x003B	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,1815 :: 		
0x003C	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,1816 :: 		
0x003D	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,1817 :: 		
0x003E	0x0CF3      	RRF        R3, 1
;__Lib_Math.c,1818 :: 		
0x003F	0x0CF2      	RRF        R2, 1
;__Lib_Math.c,1819 :: 		
0x0040	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,1820 :: 		
0x0041	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,1825 :: 		
0x0042	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,1826 :: 		
0x0043	0x2836      	GOTO       _NEXT
;__Lib_Math.c,1827 :: 		
0x0044	0x03FC      	DECF       R12, 1
;__Lib_Math.c,1828 :: 		
0x0045	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,1829 :: 		
0x0046	0x2856      	GOTO       _EXIT1
;__Lib_Math.c,1836 :: 		
0x0047	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1837 :: 		
0x0048	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1838 :: 		
0x0049	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1839 :: 		
0x004A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1840 :: 		
0x004B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1841 :: 		
0x004C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1842 :: 		
0x004D	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1843 :: 		
0x004E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1844 :: 		
0x004F	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1845 :: 		
0x0050	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1846 :: 		
0x0051	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1847 :: 		
0x0052	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1848 :: 		
0x0053	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1849 :: 		
0x0054	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1851 :: 		
0x0055	0x283A      	GOTO       _LOOP
;__Lib_Math.c,1853 :: 		
_EXIT1:
;__Lib_Math.c,1858 :: 		
0x0056	0x0874      	MOVF       R4, 0
;__Lib_Math.c,1859 :: 		
0x0057	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,1860 :: 		
0x0058	0x0875      	MOVF       R5, 0
;__Lib_Math.c,1861 :: 		
0x0059	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1862 :: 		
0x005A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,1863 :: 		
0x005B	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,1864 :: 		
0x005C	0x0876      	MOVF       R6, 0
;__Lib_Math.c,1865 :: 		
0x005D	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1866 :: 		
0x005E	0x0F76      	INCFSZ     R6, 0
;__Lib_Math.c,1867 :: 		
0x005F	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,1868 :: 		
0x0060	0x0877      	MOVF       R7, 0
;__Lib_Math.c,1869 :: 		
0x0061	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,1870 :: 		
0x0062	0x0F77      	INCFSZ     R7, 0
;__Lib_Math.c,1871 :: 		
0x0063	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,1874 :: 		
_EXIT2:
;__Lib_Math.c,1876 :: 		
0x0064	0x0008      	RETURN
; end of _Mul_32x32_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x1303      	BCF        STATUS, 6
0x0067	0x0821      	MOVF       ___DoICPAddr+1, 0
0x0068	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0069	0x0820      	MOVF       ___DoICPAddr, 0
0x006A	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x006B	0x0008      	RETURN
; end of _____DoICP
_VDelay_ms:
;__Lib_Delays.c,74 :: 		void VDelay_ms(unsigned Time_ms){
;__Lib_Delays.c,76 :: 		NumberOfCyc = Clock_kHz()>>2; // this will be done by compiler, no asm will be genereated except that for assignment;
0x006C	0x30E8      	MOVLW      232
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x00B3      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x0070	0x3003      	MOVLW      3
0x0071	0x00B4      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x0072	0x01B5      	CLRF       VDelay_ms_NumberOfCyc_L0+2
0x0073	0x01B6      	CLRF       VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,77 :: 		NumberOfCyc *= Time_ms;
0x0074	0x0831      	MOVF       FARG_VDelay_ms_Time_ms, 0
0x0075	0x00F0      	MOVWF      R0
0x0076	0x0832      	MOVF       FARG_VDelay_ms_Time_ms+1, 0
0x0077	0x00F1      	MOVWF      R0+1
0x0078	0x01F2      	CLRF       R0+2
0x0079	0x01F3      	CLRF       R0+3
0x007A	0x30E8      	MOVLW      232
0x007B	0x00F4      	MOVWF      R4
0x007C	0x3003      	MOVLW      3
0x007D	0x00F5      	MOVWF      R4+1
0x007E	0x3000      	MOVLW      0
0x007F	0x00F6      	MOVWF      R4+2
0x0080	0x3000      	MOVLW      0
0x0081	0x00F7      	MOVWF      R4+3
0x0082	0x202E      	CALL       _Mul_32x32_U
0x0083	0x0870      	MOVF       R0, 0
0x0084	0x00B3      	MOVWF      VDelay_ms_NumberOfCyc_L0
0x0085	0x0871      	MOVF       R0+1, 0
0x0086	0x00B4      	MOVWF      VDelay_ms_NumberOfCyc_L0+1
0x0087	0x0872      	MOVF       R0+2, 0
0x0088	0x00B5      	MOVWF      VDelay_ms_NumberOfCyc_L0+2
0x0089	0x0873      	MOVF       R0+3, 0
0x008A	0x00B6      	MOVWF      VDelay_ms_NumberOfCyc_L0+3
;__Lib_Delays.c,78 :: 		if (NumberOfCyc < 690)
0x008B	0x3000      	MOVLW      0
0x008C	0x0273      	SUBWF      R0+3, 0
0x008D	0x1D03      	BTFSS      STATUS, 2
0x008E	0x2899      	GOTO       L__VDelay_ms19
0x008F	0x3000      	MOVLW      0
0x0090	0x0272      	SUBWF      R0+2, 0
0x0091	0x1D03      	BTFSS      STATUS, 2
0x0092	0x2899      	GOTO       L__VDelay_ms19
0x0093	0x3002      	MOVLW      2
0x0094	0x0271      	SUBWF      R0+1, 0
0x0095	0x1D03      	BTFSS      STATUS, 2
0x0096	0x2899      	GOTO       L__VDelay_ms19
0x0097	0x30B2      	MOVLW      178
0x0098	0x0270      	SUBWF      R0, 0
L__VDelay_ms19:
0x0099	0x1803      	BTFSC      STATUS, 0
0x009A	0x289C      	GOTO       L_VDelay_ms13
;__Lib_Delays.c,79 :: 		return;
0x009B	0x0008      	RETURN
L_VDelay_ms13:
0x009C	0x1283      	BCF        STATUS, 5
0x009D	0x1303      	BCF        STATUS, 6
;__Lib_Delays.c,80 :: 		NumberOfCyc -= 690;
0x009E	0x30B2      	MOVLW      178
0x009F	0x00F0      	MOVWF      R0
0x00A0	0x3002      	MOVLW      2
0x00A1	0x00F1      	MOVWF      R0+1
0x00A2	0x01F2      	CLRF       R0+2
0x00A3	0x01F3      	CLRF       R0+3
0x00A4	0x0870      	MOVF       R0, 0
0x00A5	0x02B3      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x00A6	0x0871      	MOVF       R0+1, 0
0x00A7	0x1C03      	BTFSS      STATUS, 0
0x00A8	0x0F71      	INCFSZ     R0+1, 0
0x00A9	0x02B4      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x00AA	0x0872      	MOVF       R0+2, 0
0x00AB	0x1C03      	BTFSS      STATUS, 0
0x00AC	0x0F72      	INCFSZ     R0+2, 0
0x00AD	0x02B5      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x00AE	0x0873      	MOVF       R0+3, 0
0x00AF	0x1C03      	BTFSS      STATUS, 0
0x00B0	0x0F73      	INCFSZ     R0+3, 0
0x00B1	0x02B6      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
;__Lib_Delays.c,81 :: 		NumberOfCyc =  NumberOfCyc >> 5; // Dec and While below take around 32 instructions
0x00B2	0x3005      	MOVLW      5
0x00B3	0x00F0      	MOVWF      R0
0x00B4	0x0870      	MOVF       R0, 0
L__VDelay_ms20:
0x00B5	0x1903      	BTFSC      STATUS, 2
0x00B6	0x28BE      	GOTO       L__VDelay_ms21
0x00B7	0x0CB6      	RRF        VDelay_ms_NumberOfCyc_L0+3, 1
0x00B8	0x0CB5      	RRF        VDelay_ms_NumberOfCyc_L0+2, 1
0x00B9	0x0CB4      	RRF        VDelay_ms_NumberOfCyc_L0+1, 1
0x00BA	0x0CB3      	RRF        VDelay_ms_NumberOfCyc_L0, 1
0x00BB	0x13B6      	BCF        VDelay_ms_NumberOfCyc_L0+3, 7
0x00BC	0x3EFF      	ADDLW      255
0x00BD	0x28B5      	GOTO       L__VDelay_ms20
L__VDelay_ms21:
;__Lib_Delays.c,82 :: 		while (NumberOfCyc--)
L_VDelay_ms14:
0x00BE	0x0833      	MOVF       VDelay_ms_NumberOfCyc_L0, 0
0x00BF	0x00F0      	MOVWF      R0
0x00C0	0x0834      	MOVF       VDelay_ms_NumberOfCyc_L0+1, 0
0x00C1	0x00F1      	MOVWF      R0+1
0x00C2	0x0835      	MOVF       VDelay_ms_NumberOfCyc_L0+2, 0
0x00C3	0x00F2      	MOVWF      R0+2
0x00C4	0x0836      	MOVF       VDelay_ms_NumberOfCyc_L0+3, 0
0x00C5	0x00F3      	MOVWF      R0+3
0x00C6	0x3001      	MOVLW      1
0x00C7	0x02B3      	SUBWF      VDelay_ms_NumberOfCyc_L0, 1
0x00C8	0x1C03      	BTFSS      STATUS, 0
0x00C9	0x02B4      	SUBWF      VDelay_ms_NumberOfCyc_L0+1, 1
0x00CA	0x1C03      	BTFSS      STATUS, 0
0x00CB	0x02B5      	SUBWF      VDelay_ms_NumberOfCyc_L0+2, 1
0x00CC	0x1C03      	BTFSS      STATUS, 0
0x00CD	0x02B6      	SUBWF      VDelay_ms_NumberOfCyc_L0+3, 1
0x00CE	0x0870      	MOVF       R0, 0
0x00CF	0x0471      	IORWF      R0+1, 0
0x00D0	0x0472      	IORWF      R0+2, 0
0x00D1	0x0473      	IORWF      R0+3, 0
0x00D2	0x1903      	BTFSC      STATUS, 2
0x00D3	0x28DD      	GOTO       L_VDelay_ms15
;__Lib_Delays.c,84 :: 		asm nop;
0x00D4	0x0000      	NOP
;__Lib_Delays.c,85 :: 		asm nop;
0x00D5	0x0000      	NOP
;__Lib_Delays.c,86 :: 		asm nop;
0x00D6	0x0000      	NOP
;__Lib_Delays.c,87 :: 		asm nop;
0x00D7	0x0000      	NOP
;__Lib_Delays.c,88 :: 		asm nop;
0x00D8	0x0000      	NOP
;__Lib_Delays.c,89 :: 		asm nop;
0x00D9	0x0000      	NOP
;__Lib_Delays.c,90 :: 		asm nop;
0x00DA	0x0000      	NOP
;__Lib_Delays.c,91 :: 		asm nop;
0x00DB	0x0000      	NOP
;__Lib_Delays.c,92 :: 		}
0x00DC	0x28BE      	GOTO       L_VDelay_ms14
L_VDelay_ms15:
;__Lib_Delays.c,93 :: 		}
0x00DD	0x0008      	RETURN
; end of _VDelay_ms
_Set_Traffic:
;set_tf2.c,6 :: 		unsigned short Set_Traffic() {
;set_tf2.c,7 :: 		counterB = TMR0;        //take counterB's value from Timer0
0x00DE	0x1283      	BCF        STATUS, 5
0x00DF	0x1303      	BCF        STATUS, 6
0x00E0	0x0801      	MOVF       TMR0, 0
0x00E1	0x00A2      	MOVWF      _counterB
;set_tf2.c,8 :: 		counterA = TMR1L;       //also take counterA's value form Timer1
0x00E2	0x080E      	MOVF       TMR1L, 0
0x00E3	0x00A3      	MOVWF      _counterA
;set_tf2.c,9 :: 		delayLenA = 10;          //10s is the default value of our delays
0x00E4	0x300A      	MOVLW      10
0x00E5	0x00AE      	MOVWF      _delayLenA
;set_tf2.c,10 :: 		delayLenB = 10;
0x00E6	0x300A      	MOVLW      10
0x00E7	0x00AF      	MOVWF      _delayLenB
;set_tf2.c,13 :: 		if(counterA>5){       //when counter has counted more than 5 cars...
0x00E8	0x0823      	MOVF       _counterA, 0
0x00E9	0x3C05      	SUBLW      5
0x00EA	0x1803      	BTFSC      STATUS, 0
0x00EB	0x28F9      	GOTO       L_Set_Traffic0
;set_tf2.c,15 :: 		countOffset = counterA - 5;
0x00EC	0x3005      	MOVLW      5
0x00ED	0x0223      	SUBWF      _counterA, 0
0x00EE	0x00F2      	MOVWF      R2
0x00EF	0x0872      	MOVF       R2, 0
0x00F0	0x00B0      	MOVWF      _countOffset
;set_tf2.c,16 :: 		delayLen2A = 2*countOffset;   //add 2 seconds for each
0x00F1	0x0872      	MOVF       R2, 0
0x00F2	0x00F0      	MOVWF      R0
0x00F3	0x0DF0      	RLF        R0, 1
0x00F4	0x1070      	BCF        R0, 0
0x00F5	0x0870      	MOVF       R0, 0
0x00F6	0x00AD      	MOVWF      _delayLen2A
;set_tf2.c,18 :: 		delayLenA += delayLen2A;
0x00F7	0x0870      	MOVF       R0, 0
0x00F8	0x07AE      	ADDWF      _delayLenA, 1
;set_tf2.c,19 :: 		}
L_Set_Traffic0:
;set_tf2.c,21 :: 		if (counterB>5){         //this is identical to the code above,
0x00F9	0x0822      	MOVF       _counterB, 0
0x00FA	0x3C05      	SUBLW      5
0x00FB	0x1803      	BTFSC      STATUS, 0
0x00FC	0x290A      	GOTO       L_Set_Traffic1
;set_tf2.c,23 :: 		countOffset = counterB - 5;
0x00FD	0x3005      	MOVLW      5
0x00FE	0x0222      	SUBWF      _counterB, 0
0x00FF	0x00F2      	MOVWF      R2
0x0100	0x0872      	MOVF       R2, 0
0x0101	0x00B0      	MOVWF      _countOffset
;set_tf2.c,24 :: 		delayLen2B = 2*countOffset;
0x0102	0x0872      	MOVF       R2, 0
0x0103	0x00F0      	MOVWF      R0
0x0104	0x0DF0      	RLF        R0, 1
0x0105	0x1070      	BCF        R0, 0
0x0106	0x0870      	MOVF       R0, 0
0x0107	0x00A4      	MOVWF      _delayLen2B
;set_tf2.c,25 :: 		delayLenB += delayLen2B;
0x0108	0x0870      	MOVF       R0, 0
0x0109	0x07AF      	ADDWF      _delayLenB, 1
;set_tf2.c,26 :: 		}
L_Set_Traffic1:
;set_tf2.c,27 :: 		delayLen_msA = delayLenA*1000;         //change values into milliseconds
0x010A	0x082E      	MOVF       _delayLenA, 0
0x010B	0x00F0      	MOVWF      R0
0x010C	0x01F1      	CLRF       R0+1
0x010D	0x30E8      	MOVLW      232
0x010E	0x00F4      	MOVWF      R4
0x010F	0x3003      	MOVLW      3
0x0110	0x00F5      	MOVWF      R4+1
0x0111	0x2003      	CALL       _Mul_16x16_U
0x0112	0x0870      	MOVF       R0, 0
0x0113	0x00A5      	MOVWF      _delayLen_msA
0x0114	0x0871      	MOVF       R0+1, 0
0x0115	0x00A6      	MOVWF      _delayLen_msA+1
0x0116	0x3000      	MOVLW      0
0x0117	0x1BA6      	BTFSC      _delayLen_msA+1, 7
0x0118	0x30FF      	MOVLW      255
0x0119	0x00A7      	MOVWF      _delayLen_msA+2
0x011A	0x00A8      	MOVWF      _delayLen_msA+3
;set_tf2.c,28 :: 		delayLen_msB = delayLenB*1000;
0x011B	0x082F      	MOVF       _delayLenB, 0
0x011C	0x00F0      	MOVWF      R0
0x011D	0x01F1      	CLRF       R0+1
0x011E	0x30E8      	MOVLW      232
0x011F	0x00F4      	MOVWF      R4
0x0120	0x3003      	MOVLW      3
0x0121	0x00F5      	MOVWF      R4+1
0x0122	0x2003      	CALL       _Mul_16x16_U
0x0123	0x0870      	MOVF       R0, 0
0x0124	0x00A9      	MOVWF      _delayLen_msB
0x0125	0x0871      	MOVF       R0+1, 0
0x0126	0x00AA      	MOVWF      _delayLen_msB+1
0x0127	0x3000      	MOVLW      0
0x0128	0x1BAA      	BTFSC      _delayLen_msB+1, 7
0x0129	0x30FF      	MOVLW      255
0x012A	0x00AB      	MOVWF      _delayLen_msB+2
0x012B	0x00AC      	MOVWF      _delayLen_msB+3
;set_tf2.c,30 :: 		TMR0 = 0;                //reset your counters immediately
0x012C	0x0181      	CLRF       TMR0
;set_tf2.c,31 :: 		TMR1L = 0;
0x012D	0x018E      	CLRF       TMR1L
;set_tf2.c,32 :: 		return delayLen_msA, delayLen_msB;
0x012E	0x0829      	MOVF       _delayLen_msB, 0
0x012F	0x00F0      	MOVWF      R0
;set_tf2.c,33 :: 		}
0x0130	0x0008      	RETURN
; end of _Set_Traffic
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x0131	0x2065      	CALL       _____DoICP
0x0132	0x118A      	BCF        PCLATH, 3
0x0133	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x0134	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x0135	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x0136	0x0AA0      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x0137	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x0138	0x0AA1      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x0139	0x03F0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x013A	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x013B	0x2931      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x013C	0x0008      	RETURN
; end of ___CC2DW
_default_Seq:
;TOCK_Counter.c,3 :: 		void default_Seq(){
;TOCK_Counter.c,6 :: 		PORTB = 0b00010010;        //All Amber
0x013D	0x3012      	MOVLW      18
0x013E	0x1283      	BCF        STATUS, 5
0x013F	0x1303      	BCF        STATUS, 6
0x0140	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,7 :: 		delay_ms(500);
0x0141	0x3003      	MOVLW      3
0x0142	0x00FB      	MOVWF      R11
0x0143	0x308A      	MOVLW      138
0x0144	0x00FC      	MOVWF      R12
0x0145	0x3055      	MOVLW      85
0x0146	0x00FD      	MOVWF      R13
L_default_Seq2:
0x0147	0x0BFD      	DECFSZ     R13, 1
0x0148	0x2947      	GOTO       L_default_Seq2
0x0149	0x0BFC      	DECFSZ     R12, 1
0x014A	0x2947      	GOTO       L_default_Seq2
0x014B	0x0BFB      	DECFSZ     R11, 1
0x014C	0x2947      	GOTO       L_default_Seq2
0x014D	0x0000      	NOP
0x014E	0x0000      	NOP
;TOCK_Counter.c,8 :: 		PORTB = 0b00001001;        //All Red
0x014F	0x3009      	MOVLW      9
0x0150	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,9 :: 		delay_ms(2000);
0x0151	0x300B      	MOVLW      11
0x0152	0x00FB      	MOVWF      R11
0x0153	0x3026      	MOVLW      38
0x0154	0x00FC      	MOVWF      R12
0x0155	0x305D      	MOVLW      93
0x0156	0x00FD      	MOVWF      R13
L_default_Seq3:
0x0157	0x0BFD      	DECFSZ     R13, 1
0x0158	0x2957      	GOTO       L_default_Seq3
0x0159	0x0BFC      	DECFSZ     R12, 1
0x015A	0x2957      	GOTO       L_default_Seq3
0x015B	0x0BFB      	DECFSZ     R11, 1
0x015C	0x2957      	GOTO       L_default_Seq3
0x015D	0x0000      	NOP
0x015E	0x0000      	NOP
;TOCK_Counter.c,11 :: 		while(1){
L_default_Seq4:
;TOCK_Counter.c,12 :: 		Set_Traffic();           //check for traffic count
0x015F	0x20DE      	CALL       _Set_Traffic
;TOCK_Counter.c,13 :: 		delay_ms(500);
0x0160	0x3003      	MOVLW      3
0x0161	0x00FB      	MOVWF      R11
0x0162	0x308A      	MOVLW      138
0x0163	0x00FC      	MOVWF      R12
0x0164	0x3055      	MOVLW      85
0x0165	0x00FD      	MOVWF      R13
L_default_Seq6:
0x0166	0x0BFD      	DECFSZ     R13, 1
0x0167	0x2966      	GOTO       L_default_Seq6
0x0168	0x0BFC      	DECFSZ     R12, 1
0x0169	0x2966      	GOTO       L_default_Seq6
0x016A	0x0BFB      	DECFSZ     R11, 1
0x016B	0x2966      	GOTO       L_default_Seq6
0x016C	0x0000      	NOP
0x016D	0x0000      	NOP
;TOCK_Counter.c,14 :: 		PORTB = 0b00100001;       //NS Red, EW Green
0x016E	0x3021      	MOVLW      33
0x016F	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,15 :: 		Vdelay_ms(delayLen_msA);
0x0170	0x0825      	MOVF       _delayLen_msA, 0
0x0171	0x00B1      	MOVWF      FARG_VDelay_ms_Time_ms
0x0172	0x0826      	MOVF       _delayLen_msA+1, 0
0x0173	0x00B2      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x0174	0x206C      	CALL       _VDelay_ms
;TOCK_Counter.c,16 :: 		PORTA = delayLenA;        //show delay length on 7 seg display
0x0175	0x1283      	BCF        STATUS, 5
0x0176	0x1303      	BCF        STATUS, 6
0x0177	0x082E      	MOVF       _delayLenA, 0
0x0178	0x0085      	MOVWF      PORTA
;TOCK_Counter.c,17 :: 		PORTB = 0b00010001;       //NS Red, EW Amber
0x0179	0x3011      	MOVLW      17
0x017A	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,18 :: 		delay_ms(500);
0x017B	0x3003      	MOVLW      3
0x017C	0x00FB      	MOVWF      R11
0x017D	0x308A      	MOVLW      138
0x017E	0x00FC      	MOVWF      R12
0x017F	0x3055      	MOVLW      85
0x0180	0x00FD      	MOVWF      R13
L_default_Seq7:
0x0181	0x0BFD      	DECFSZ     R13, 1
0x0182	0x2981      	GOTO       L_default_Seq7
0x0183	0x0BFC      	DECFSZ     R12, 1
0x0184	0x2981      	GOTO       L_default_Seq7
0x0185	0x0BFB      	DECFSZ     R11, 1
0x0186	0x2981      	GOTO       L_default_Seq7
0x0187	0x0000      	NOP
0x0188	0x0000      	NOP
;TOCK_Counter.c,19 :: 		PORTB = 0b00001001;       //NS Red, EW Red
0x0189	0x3009      	MOVLW      9
0x018A	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,20 :: 		delay_ms(500);
0x018B	0x3003      	MOVLW      3
0x018C	0x00FB      	MOVWF      R11
0x018D	0x308A      	MOVLW      138
0x018E	0x00FC      	MOVWF      R12
0x018F	0x3055      	MOVLW      85
0x0190	0x00FD      	MOVWF      R13
L_default_Seq8:
0x0191	0x0BFD      	DECFSZ     R13, 1
0x0192	0x2991      	GOTO       L_default_Seq8
0x0193	0x0BFC      	DECFSZ     R12, 1
0x0194	0x2991      	GOTO       L_default_Seq8
0x0195	0x0BFB      	DECFSZ     R11, 1
0x0196	0x2991      	GOTO       L_default_Seq8
0x0197	0x0000      	NOP
0x0198	0x0000      	NOP
;TOCK_Counter.c,21 :: 		PORTB = 0b00001100;        //NS Green, EW Red
0x0199	0x300C      	MOVLW      12
0x019A	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,22 :: 		Vdelay_ms(delayLen_msB);
0x019B	0x0829      	MOVF       _delayLen_msB, 0
0x019C	0x00B1      	MOVWF      FARG_VDelay_ms_Time_ms
0x019D	0x082A      	MOVF       _delayLen_msB+1, 0
0x019E	0x00B2      	MOVWF      FARG_VDelay_ms_Time_ms+1
0x019F	0x206C      	CALL       _VDelay_ms
;TOCK_Counter.c,23 :: 		PORTA = delayLenB;
0x01A0	0x1283      	BCF        STATUS, 5
0x01A1	0x1303      	BCF        STATUS, 6
0x01A2	0x082F      	MOVF       _delayLenB, 0
0x01A3	0x0085      	MOVWF      PORTA
;TOCK_Counter.c,24 :: 		PORTB = 0b00001010;        //NS Amber, EW Red
0x01A4	0x300A      	MOVLW      10
0x01A5	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,25 :: 		delay_ms(500);
0x01A6	0x3003      	MOVLW      3
0x01A7	0x00FB      	MOVWF      R11
0x01A8	0x308A      	MOVLW      138
0x01A9	0x00FC      	MOVWF      R12
0x01AA	0x3055      	MOVLW      85
0x01AB	0x00FD      	MOVWF      R13
L_default_Seq9:
0x01AC	0x0BFD      	DECFSZ     R13, 1
0x01AD	0x29AC      	GOTO       L_default_Seq9
0x01AE	0x0BFC      	DECFSZ     R12, 1
0x01AF	0x29AC      	GOTO       L_default_Seq9
0x01B0	0x0BFB      	DECFSZ     R11, 1
0x01B1	0x29AC      	GOTO       L_default_Seq9
0x01B2	0x0000      	NOP
0x01B3	0x0000      	NOP
;TOCK_Counter.c,26 :: 		PORTB = 0b00001001;        //NS Red, EW Red
0x01B4	0x3009      	MOVLW      9
0x01B5	0x0086      	MOVWF      PORTB
;TOCK_Counter.c,27 :: 		}
0x01B6	0x295F      	GOTO       L_default_Seq4
;TOCK_Counter.c,28 :: 		}
0x01B7	0x0008      	RETURN
; end of _default_Seq
_main:
;TOCK_Counter.c,30 :: 		void main() {
;TOCK_Counter.c,33 :: 		T0SE_bit = 0;    //increment at rising edge of T0CK
0x01B8	0x1683      	BSF        STATUS, 5
0x01B9	0x1303      	BCF        STATUS, 6
0x01BA	0x1201      	BCF        T0SE_bit, 4
;TOCK_Counter.c,34 :: 		TMR1ON_bit = 1;
0x01BB	0x1283      	BCF        STATUS, 5
0x01BC	0x1410      	BSF        TMR1ON_bit, 0
;TOCK_Counter.c,35 :: 		T1OSCEN_bit = 1;
0x01BD	0x1590      	BSF        T1OSCEN_bit, 3
;TOCK_Counter.c,36 :: 		TMR1CS_bit = 1;
0x01BE	0x1490      	BSF        TMR1CS_bit, 1
;TOCK_Counter.c,37 :: 		T0CS_bit = 1;
0x01BF	0x1683      	BSF        STATUS, 5
0x01C0	0x1681      	BSF        T0CS_bit, 5
;TOCK_Counter.c,40 :: 		PORTA = 0x00;
0x01C1	0x1283      	BCF        STATUS, 5
0x01C2	0x0185      	CLRF       PORTA
;TOCK_Counter.c,41 :: 		PORTB = 0x00;
0x01C3	0x0186      	CLRF       PORTB
;TOCK_Counter.c,42 :: 		TRISA = 0xF0;
0x01C4	0x30F0      	MOVLW      240
0x01C5	0x1683      	BSF        STATUS, 5
0x01C6	0x0085      	MOVWF      TRISA
;TOCK_Counter.c,43 :: 		TRISB = 0x00;
0x01C7	0x0186      	CLRF       TRISB
;TOCK_Counter.c,44 :: 		TMR0 = 0;
0x01C8	0x1283      	BCF        STATUS, 5
0x01C9	0x0181      	CLRF       TMR0
;TOCK_Counter.c,45 :: 		TMR1L= 0;
0x01CA	0x018E      	CLRF       TMR1L
;TOCK_Counter.c,48 :: 		default_Seq();
0x01CB	0x213D      	CALL       _default_Seq
;TOCK_Counter.c,52 :: 		}
0x01CC	0x29CC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [43]    _Mul_16x16_U
0x002E      [55]    _Mul_32x32_U
0x0065       [7]    _____DoICP
0x006C     [114]    _VDelay_ms
0x00DE      [83]    _Set_Traffic
0x0131      [12]    ___CC2DW
0x013D     [123]    _default_Seq
0x01B8      [21]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    RP0_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    NOT_PD_bit
0x0003       [0]    Z_bit
0x0003       [0]    RP1_bit
0x0003       [0]    DC_bit
0x0003       [0]    IRP_bit
0x0003       [0]    C_bit
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0005       [0]    RA7_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA6_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB3_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB2_bit
0x0006       [1]    PORTB
0x0006       [0]    RB6_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x000A       [1]    PCLATH
0x000B       [0]    T0IF_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    GIE_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    EEIF_bit
0x000C       [0]    CMIF_bit
0x000C       [1]    PIR1
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [1]    T1CON
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1CS_bit
0x0010       [0]    TMR1ON_bit
0x0011       [1]    TMR2
0x0012       [0]    T2CKPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TMR2ON_bit
0x0012       [0]    TOUTPS0_bit
0x0015       [2]    CCPR1
0x0015       [1]    CCPR1L
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M2_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M3_bit
0x0017       [1]    CCP1CON
0x0018       [1]    RCSTA
0x0018       [0]    OERR_bit
0x0018       [0]    CREN_bit
0x0018       [0]    FERR_bit
0x0018       [0]    ADEN_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    RX9_bit
0x0018       [0]    SPEN_bit
0x0018       [0]    SREN_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001F       [0]    CM2_bit
0x001F       [0]    CIS_bit
0x001F       [0]    C1INV_bit
0x001F       [1]    CMCON
0x001F       [0]    CM0_bit
0x001F       [0]    CM1_bit
0x001F       [0]    C2OUT_bit
0x001F       [0]    C1OUT_bit
0x001F       [0]    C2INV_bit
0x0020       [2]    ___DoICPAddr
0x0022       [1]    _counterB
0x0023       [1]    _counterA
0x0024       [1]    _delayLen2B
0x0025       [4]    _delayLen_msA
0x0029       [4]    _delayLen_msB
0x002D       [1]    _delayLen2A
0x002E       [1]    _delayLenA
0x002F       [1]    _delayLenB
0x0030       [1]    _countOffset
0x0031       [2]    FARG_VDelay_ms_Time_ms
0x0033       [4]    VDelay_ms_NumberOfCyc_L0
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PS2_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0081       [0]    INTEDG_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    PSA_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    T0CS_bit
0x0085       [0]    TRISA2_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA7_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA6_bit
0x0085       [0]    TRISA4_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB7_bit
0x008C       [0]    TMR2IE_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TXIE_bit
0x008C       [0]    EEIE_bit
0x008C       [0]    CMIE_bit
0x008C       [0]    RCIE_bit
0x008E       [0]    NOT_BO_bit
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_BOD_bit
0x008E       [0]    NOT_POR_bit
0x008E       [1]    PCON
0x008E       [0]    OSCF_bit
0x0092       [1]    PR2
0x0098       [0]    TX9_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    TX9D_bit
0x0098       [1]    TXSTA
0x0098       [0]    TRMT_bit
0x0098       [0]    SYNC_bit
0x0098       [0]    BRGH_bit
0x0099       [1]    SPBRG
0x009A       [1]    EEDATA
0x009B       [1]    EEADR
0x009C       [1]    EECON1
0x009C       [0]    WREN_bit
0x009C       [0]    WRERR_bit
0x009C       [0]    WR_bit
0x009C       [0]    RD_bit
0x009D       [1]    EECON2
0x009F       [0]    VRR_bit
0x009F       [0]    VR3_bit
0x009F       [0]    VREN_bit
0x009F       [0]    VROE_bit
0x009F       [0]    VR0_bit
0x009F       [1]    VRCON
0x009F       [0]    VR2_bit
0x009F       [0]    VR1_bit
//** Label List: ** 
//----------------------------------------------
  L_Set_Traffic0
  L_Set_Traffic1
  L_default_Seq2
  L_default_Seq3
  L_default_Seq4
  L_default_Seq5
  L_default_Seq6
  L_default_Seq7
  L_default_Seq8
  L_default_Seq9
  _Set_Traffic
  _default_Seq
  _main
  L_Delay_10us0
  L_Delay_22us1
  L_Delay_50us2
  L_Delay_80us3
  L_Delay_500us4
  L_Delay_5500us5
  L_Delay_8ms6
  L_Delay_5ms7
  L_Delay_100ms8
  L_Delay_1sec9
  L_boot16_Delay_5ms10
  L_Delay_Cyc11
  L_Delay_Cyc12
  L_VDelay_ms13
  L_VDelay_ms14
  L_VDelay_ms15
  L_VDelay_Advanced_ms16
  L_VDelay_Advanced_ms17
  L_VDelay_Advanced_ms18
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_8ms
  _Delay_5ms
  _Delay_100ms
  _Delay_1sec
  _boot16_Delay_5ms
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms19
  L__VDelay_ms20
  L__VDelay_ms21
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms22
  L__VDelay_Advanced_ms23
  L__VDelay_Advanced_ms24
  L_Div_16x16_S0
  L_Div_16x16_S1
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_Div_32x32_S6
  L_Div_32x32_S7
  L_Div_32x32_S8
  L_Div_32x32_S9
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
