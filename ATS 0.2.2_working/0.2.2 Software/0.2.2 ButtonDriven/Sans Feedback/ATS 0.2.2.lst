;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 02-Jul-14 11:29:05
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28B7      	GOTO       183
_interrupt:
0x0004	0x00CF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x009D      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x009E      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0840      	MOVF       R0, 0
0x000C	0x008C      	MOVWF      12
;ATS 0.2.2.c,76 :: 		void interrupt() {       //TMR0 Interrupt Handler
;ATS 0.2.2.c,79 :: 		GIE_Bit = 0;
0x000D	0x138B      	BCF        GIE_bit, 7
;ATS 0.2.2.c,81 :: 		if (T0IF_Bit) {         //TMR0 Interrupt
0x000E	0x1D0B      	BTFSS      T0IF_bit, 2
0x000F	0x2847      	GOTO       L_interrupt0
;ATS 0.2.2.c,83 :: 		T0IF_Bit = 0;        //reset interrupt flag
0x0010	0x1283      	BCF        STATUS, 5
0x0011	0x110B      	BCF        T0IF_bit, 2
;ATS 0.2.2.c,84 :: 		TMR0 = 0;            //reset timer
0x0012	0x0181      	CLRF       TMR0
;ATS 0.2.2.c,85 :: 		ProgTimer++;         //timer that is incremented whenever TMR0
0x0013	0x0A9B      	INCF       _ProgTimer, 1
0x0014	0x1903      	BTFSC      STATUS, 2
0x0015	0x0A9C      	INCF       _ProgTimer+1, 1
;ATS 0.2.2.c,87 :: 		if (progTimer == 1953)
0x0016	0x081C      	MOVF       _ProgTimer+1, 0
0x0017	0x3A07      	XORLW      7
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281C      	GOTO       L__interrupt38
0x001A	0x30A1      	MOVLW      161
0x001B	0x061B      	XORWF      _ProgTimer, 0
L__interrupt38:
0x001C	0x1D03      	BTFSS      STATUS, 2
0x001D	0x2847      	GOTO       L_interrupt1
;ATS 0.2.2.c,89 :: 		RealTimer++;      //one-second timer
0x001E	0x0A99      	INCF       _RealTimer, 1
0x001F	0x1903      	BTFSC      STATUS, 2
0x0020	0x0A9A      	INCF       _RealTimer+1, 1
;ATS 0.2.2.c,92 :: 		if (RunTimer == RunTime) { //when Run Time Reaches Max, Cooldown
0x0021	0x0818      	MOVF       _RunTimer+1, 0
0x0022	0x0614      	XORWF      _RunTime+1, 0
0x0023	0x1D03      	BTFSS      STATUS, 2
0x0024	0x2827      	GOTO       L__interrupt39
0x0025	0x0813      	MOVF       _RunTime, 0
0x0026	0x0617      	XORWF      _RunTimer, 0
L__interrupt39:
0x0027	0x1D03      	BTFSS      STATUS, 2
0x0028	0x282D      	GOTO       L_interrupt2
;ATS 0.2.2.c,93 :: 		RunTimer = 0;
0x0029	0x0197      	CLRF       _RunTimer
0x002A	0x0198      	CLRF       _RunTimer+1
;ATS 0.2.2.c,94 :: 		Run_flag = 0;         //Stop Procedure requested.
0x002B	0x108E      	BCF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,95 :: 		CoolDown_Flag = 1;
0x002C	0x140E      	BSF        _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
;ATS 0.2.2.c,96 :: 		}
L_interrupt2:
;ATS 0.2.2.c,98 :: 		if (CoolDownTimer == CoolDownTime) {
0x002D	0x0812      	MOVF       _CoolDownTimer+1, 0
0x002E	0x0616      	XORWF      _CoolDownTime+1, 0
0x002F	0x1D03      	BTFSS      STATUS, 2
0x0030	0x2833      	GOTO       L__interrupt40
0x0031	0x0815      	MOVF       _CoolDownTime, 0
0x0032	0x0611      	XORWF      _CoolDownTimer, 0
L__interrupt40:
0x0033	0x1D03      	BTFSS      STATUS, 2
0x0034	0x2838      	GOTO       L_interrupt3
;ATS 0.2.2.c,99 :: 		CoolDownTimer = 0;
0x0035	0x0191      	CLRF       _CoolDownTimer
0x0036	0x0192      	CLRF       _CoolDownTimer+1
;ATS 0.2.2.c,101 :: 		CoolDown_Flag = 0;
0x0037	0x100E      	BCF        _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
;ATS 0.2.2.c,102 :: 		}
L_interrupt3:
;ATS 0.2.2.c,106 :: 		if (Run_Flag) RunTimer++;
0x0038	0x1C8E      	BTFSS      _Run_Flag, BitPos(_Run_Flag+0)
0x0039	0x283D      	GOTO       L_interrupt4
0x003A	0x0A97      	INCF       _RunTimer, 1
0x003B	0x1903      	BTFSC      STATUS, 2
0x003C	0x0A98      	INCF       _RunTimer+1, 1
L_interrupt4:
;ATS 0.2.2.c,107 :: 		if (CoolDown_Flag) CoolDownTimer++;
0x003D	0x1C0E      	BTFSS      _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
0x003E	0x2842      	GOTO       L_interrupt5
0x003F	0x0A91      	INCF       _CoolDownTimer, 1
0x0040	0x1903      	BTFSC      STATUS, 2
0x0041	0x0A92      	INCF       _CoolDownTimer+1, 1
L_interrupt5:
0x0042	0x1283      	BCF        STATUS, 5
;ATS 0.2.2.c,109 :: 		SQOUT=~SQOUT;
0x0043	0x3001      	MOVLW      1
0x0044	0x0685      	XORWF      RA0_bit, 1
;ATS 0.2.2.c,110 :: 		progTimer = 0;                     //reset prog timer
0x0045	0x019B      	CLRF       _ProgTimer
0x0046	0x019C      	CLRF       _ProgTimer+1
;ATS 0.2.2.c,111 :: 		} //if  ProgTimer=1953
L_interrupt1:
;ATS 0.2.2.c,112 :: 		} //if (T0IF_Bit)
L_interrupt0:
;ATS 0.2.2.c,114 :: 		if (INTF_Bit) {           //Pressing "Stop" forced Stop, Turn Off all
0x0047	0x1C8B      	BTFSS      INTF_bit, 1
0x0048	0x284E      	GOTO       L_interrupt6
;ATS 0.2.2.c,115 :: 		INTF_Bit = 0;          //reset interrupt
0x0049	0x108B      	BCF        INTF_bit, 1
;ATS 0.2.2.c,117 :: 		RBValue = 19;          //so that it falls into "Default"
0x004A	0x3013      	MOVLW      19
0x004B	0x008D      	MOVWF      _RBValue
;ATS 0.2.2.c,118 :: 		Auto_Flag = 0;
0x004C	0x110E      	BCF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,119 :: 		Run_Flag = 0;
0x004D	0x108E      	BCF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,120 :: 		}
L_interrupt6:
;ATS 0.2.2.c,121 :: 		GIE_Bit = 1;
0x004E	0x178B      	BSF        GIE_bit, 7
;ATS 0.2.2.c,122 :: 		}
L__interrupt37:
0x004F	0x080C      	MOVF       12, 0
0x0050	0x00C0      	MOVWF      R0
0x0051	0x081E      	MOVF       ___savePCLATH, 0
0x0052	0x008A      	MOVWF      PCLATH
0x0053	0x0E1D      	SWAPF      ___saveSTATUS, 0
0x0054	0x0083      	MOVWF      STATUS
0x0055	0x0ECF      	SWAPF      R15, 1
0x0056	0x0E4F      	SWAPF      R15, 0
0x0057	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0058	0x1283      	BCF        STATUS, 5
0x0059	0x0810      	MOVF       ___DoICPAddr+1, 0
0x005A	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x005B	0x080F      	MOVF       ___DoICPAddr, 0
0x005C	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
0x005D	0x0008      	RETURN
; end of _____DoICP
_Poll:
;ATS 0.2.2.c,252 :: 		void Poll() {
;ATS 0.2.2.c,253 :: 		if (Auto_Flag && ZESA) {
0x005E	0x1283      	BCF        STATUS, 5
0x005F	0x1D0E      	BTFSS      _Auto_Flag, BitPos(_Auto_Flag+0)
0x0060	0x2875      	GOTO       L_Poll26
0x0061	0x1D05      	BTFSS      RA2_bit, 2
0x0062	0x2875      	GOTO       L_Poll26
L__Poll36:
;ATS 0.2.2.c,254 :: 		ChangeOver = 0;    // make sure you revert to ZESA Supply
0x0063	0x1286      	BCF        RB5_bit, 5
;ATS 0.2.2.c,255 :: 		delay_ms(2000);
0x0064	0x300B      	MOVLW      11
0x0065	0x00CB      	MOVWF      R11
0x0066	0x3026      	MOVLW      38
0x0067	0x00CC      	MOVWF      R12
0x0068	0x305D      	MOVLW      93
0x0069	0x00CD      	MOVWF      R13
L_Poll27:
0x006A	0x0BCD      	DECFSZ     R13, 1
0x006B	0x286A      	GOTO       L_Poll27
0x006C	0x0BCC      	DECFSZ     R12, 1
0x006D	0x286A      	GOTO       L_Poll27
0x006E	0x0BCB      	DECFSZ     R11, 1
0x006F	0x286A      	GOTO       L_Poll27
0x0070	0x0000      	NOP
0x0071	0x0000      	NOP
;ATS 0.2.2.c,256 :: 		RBValue = 19;       //Fall to Default
0x0072	0x3013      	MOVLW      19
0x0073	0x008D      	MOVWF      _RBValue
;ATS 0.2.2.c,258 :: 		}
0x0074	0x28AA      	GOTO       L_Poll28
L_Poll26:
;ATS 0.2.2.c,260 :: 		delay_ms(1000);    //Just wait...
0x0075	0x3006      	MOVLW      6
0x0076	0x00CB      	MOVWF      R11
0x0077	0x3013      	MOVLW      19
0x0078	0x00CC      	MOVWF      R12
0x0079	0x30AD      	MOVLW      173
0x007A	0x00CD      	MOVWF      R13
L_Poll29:
0x007B	0x0BCD      	DECFSZ     R13, 1
0x007C	0x287B      	GOTO       L_Poll29
0x007D	0x0BCC      	DECFSZ     R12, 1
0x007E	0x287B      	GOTO       L_Poll29
0x007F	0x0BCB      	DECFSZ     R11, 1
0x0080	0x287B      	GOTO       L_Poll29
0x0081	0x0000      	NOP
0x0082	0x0000      	NOP
;ATS 0.2.2.c,261 :: 		if (!Run_flag) {  //if the Gen is running, leave and Poll
0x0083	0x188E      	BTFSC      _Run_Flag, BitPos(_Run_Flag+0)
0x0084	0x28AA      	GOTO       L_Poll30
;ATS 0.2.2.c,264 :: 		if (!CoolDown_Flag) {
0x0085	0x180E      	BTFSC      _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
0x0086	0x28AA      	GOTO       L_Poll31
;ATS 0.2.2.c,265 :: 		GenStop = 1;   //Run the Generator Start Routine
0x0087	0x1606      	BSF        RB4_bit, 4
;ATS 0.2.2.c,266 :: 		GenOn = 1;
0x0088	0x1786      	BSF        RB7_bit, 7
;ATS 0.2.2.c,267 :: 		GenStart = 1;
0x0089	0x1706      	BSF        RB6_bit, 6
;ATS 0.2.2.c,268 :: 		delay_ms(5000);      //crank for (5) seconds
0x008A	0x301A      	MOVLW      26
0x008B	0x00CB      	MOVWF      R11
0x008C	0x305E      	MOVLW      94
0x008D	0x00CC      	MOVWF      R12
0x008E	0x306E      	MOVLW      110
0x008F	0x00CD      	MOVWF      R13
L_Poll32:
0x0090	0x0BCD      	DECFSZ     R13, 1
0x0091	0x2890      	GOTO       L_Poll32
0x0092	0x0BCC      	DECFSZ     R12, 1
0x0093	0x2890      	GOTO       L_Poll32
0x0094	0x0BCB      	DECFSZ     R11, 1
0x0095	0x2890      	GOTO       L_Poll32
0x0096	0x0000      	NOP
;ATS 0.2.2.c,269 :: 		Run_Flag = 1;
0x0097	0x148E      	BSF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,270 :: 		GenStart = 0;      //Stop Cranking
0x0098	0x1306      	BCF        RB6_bit, 6
;ATS 0.2.2.c,272 :: 		Delay_ms(5000);     //Stabilize
0x0099	0x301A      	MOVLW      26
0x009A	0x00CB      	MOVWF      R11
0x009B	0x305E      	MOVLW      94
0x009C	0x00CC      	MOVWF      R12
0x009D	0x306E      	MOVLW      110
0x009E	0x00CD      	MOVWF      R13
L_Poll33:
0x009F	0x0BCD      	DECFSZ     R13, 1
0x00A0	0x289F      	GOTO       L_Poll33
0x00A1	0x0BCC      	DECFSZ     R12, 1
0x00A2	0x289F      	GOTO       L_Poll33
0x00A3	0x0BCB      	DECFSZ     R11, 1
0x00A4	0x289F      	GOTO       L_Poll33
0x00A5	0x0000      	NOP
;ATS 0.2.2.c,275 :: 		if (!ZESA) {
0x00A6	0x1905      	BTFSC      RA2_bit, 2
0x00A7	0x28AA      	GOTO       L_Poll34
;ATS 0.2.2.c,276 :: 		ChangeOver = 1;
0x00A8	0x1686      	BSF        RB5_bit, 5
;ATS 0.2.2.c,277 :: 		Run_Flag = 1;
0x00A9	0x148E      	BSF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,278 :: 		}//if AutoMode and ZESA
L_Poll34:
;ATS 0.2.2.c,279 :: 		}//if !CoolDown_Flag
L_Poll31:
;ATS 0.2.2.c,280 :: 		} // if !Run Flag
L_Poll30:
;ATS 0.2.2.c,281 :: 		}//else ZESA is not there
L_Poll28:
;ATS 0.2.2.c,282 :: 		} //Poll
0x00AA	0x0008      	RETURN
; end of _Poll
___CC2DW:
;__Lib_System.c,24 :: 		
;__Lib_System.c,27 :: 		
_CC2D_Loop1:
;__Lib_System.c,29 :: 		
0x00AB	0x2058      	CALL       _____DoICP
0x00AC	0x118A      	BCF        PCLATH, 3
0x00AD	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,31 :: 		
0x00AE	0x0080      	MOVWF      INDF
;__Lib_System.c,32 :: 		
0x00AF	0x0A84      	INCF       FSR, 1
;__Lib_System.c,33 :: 		
0x00B0	0x0A8F      	INCF       ___DoICPAddr, 1
;__Lib_System.c,35 :: 		
0x00B1	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,36 :: 		
0x00B2	0x0A90      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,37 :: 		
0x00B3	0x03C0      	DECF       R0, 1
;__Lib_System.c,39 :: 		
0x00B4	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,40 :: 		
0x00B5	0x28AB      	GOTO       _CC2D_Loop1
;__Lib_System.c,42 :: 		
0x00B6	0x0008      	RETURN
; end of ___CC2DW
_main:
;ATS 0.2.2.c,125 :: 		void main() {
;ATS 0.2.2.c,128 :: 		ProgTimer = 0;
0x00B7	0x1283      	BCF        STATUS, 5
0x00B8	0x019B      	CLRF       _ProgTimer
0x00B9	0x019C      	CLRF       _ProgTimer+1
;ATS 0.2.2.c,129 :: 		RealTimer = 0;
0x00BA	0x0199      	CLRF       _RealTimer
0x00BB	0x019A      	CLRF       _RealTimer+1
;ATS 0.2.2.c,130 :: 		RunTimer = 0;
0x00BC	0x0197      	CLRF       _RunTimer
0x00BD	0x0198      	CLRF       _RunTimer+1
;ATS 0.2.2.c,131 :: 		CoolDownTimer = 0;
0x00BE	0x0191      	CLRF       _CoolDownTimer
0x00BF	0x0192      	CLRF       _CoolDownTimer+1
;ATS 0.2.2.c,132 :: 		Auto_Flag = 0;
0x00C0	0x110E      	BCF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,133 :: 		Run_Flag = 0;
0x00C1	0x108E      	BCF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,134 :: 		CoolDown_Flag = 0;
0x00C2	0x100E      	BCF        _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
;ATS 0.2.2.c,135 :: 		GenFeedFlag = 0;
0x00C3	0x118E      	BCF        _GenFeedFlag, BitPos(_GenFeedFlag+0)
;ATS 0.2.2.c,136 :: 		RunTime = 0;
0x00C4	0x0193      	CLRF       _RunTime
0x00C5	0x0194      	CLRF       _RunTime+1
;ATS 0.2.2.c,137 :: 		CoolDownTime = 0;
0x00C6	0x0195      	CLRF       _CoolDownTime
0x00C7	0x0196      	CLRF       _CoolDownTime+1
;ATS 0.2.2.c,138 :: 		RBValue = 0;
0x00C8	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,144 :: 		RunTime = 14388;   //4 hours - 12 seconds run time
0x00C9	0x3034      	MOVLW      52
0x00CA	0x0093      	MOVWF      _RunTime
0x00CB	0x3038      	MOVLW      56
0x00CC	0x0094      	MOVWF      _RunTime+1
;ATS 0.2.2.c,146 :: 		CoolDownTime = 3599;   //1 hour (- 1 second) cooldown time
0x00CD	0x300F      	MOVLW      15
0x00CE	0x0095      	MOVWF      _CoolDownTime
0x00CF	0x300E      	MOVLW      14
0x00D0	0x0096      	MOVWF      _CoolDownTime+1
;ATS 0.2.2.c,148 :: 		PORTA = 0;
0x00D1	0x0185      	CLRF       PORTA
;ATS 0.2.2.c,149 :: 		TRISA = 0b10110;        //Following the I-O Table Above(line 37)
0x00D2	0x3016      	MOVLW      22
0x00D3	0x1683      	BSF        STATUS, 5
0x00D4	0x0085      	MOVWF      TRISA
;ATS 0.2.2.c,150 :: 		PORTB = 0;
0x00D5	0x1283      	BCF        STATUS, 5
0x00D6	0x0186      	CLRF       PORTB
;ATS 0.2.2.c,151 :: 		TRISB = 0b00001111;     //Following the I-O Table Above
0x00D7	0x300F      	MOVLW      15
0x00D8	0x1683      	BSF        STATUS, 5
0x00D9	0x0086      	MOVWF      TRISB
;ATS 0.2.2.c,155 :: 		T0IE_Bit = 1;           //Enable TMR0 Interrupt
0x00DA	0x168B      	BSF        T0IE_bit, 5
;ATS 0.2.2.c,156 :: 		INTE_Bit = 1;          //Enable RB0 Interrupt...
0x00DB	0x160B      	BSF        INTE_bit, 4
;ATS 0.2.2.c,157 :: 		INTEDG_Bit = 1;        //...on rising edge of RB0
0x00DC	0x1701      	BSF        INTEDG_bit, 6
;ATS 0.2.2.c,158 :: 		GIE_bit = 1;
0x00DD	0x178B      	BSF        GIE_bit, 7
;ATS 0.2.2.c,162 :: 		T0CS_Bit = 0;    //Select Timer Mode. Timer Starts Now
0x00DE	0x1281      	BCF        T0CS_bit, 5
;ATS 0.2.2.c,163 :: 		TMR0 = 0;        //reset the TMR0 Register
0x00DF	0x1283      	BCF        STATUS, 5
0x00E0	0x0181      	CLRF       TMR0
;ATS 0.2.2.c,164 :: 		PSA_Bit = 0;     //Assign Prescaler from WDT to Timer0 when value = 0
0x00E1	0x1683      	BSF        STATUS, 5
0x00E2	0x1181      	BCF        PSA_bit, 3
;ATS 0.2.2.c,165 :: 		OPTION_REG &=248;         //Clear Previous Prescaler Values
0x00E3	0x30F8      	MOVLW      248
0x00E4	0x0581      	ANDWF      OPTION_REG, 1
;ATS 0.2.2.c,166 :: 		OPTION_REG |=0;     //set Prescaler to 1:2
;ATS 0.2.2.c,171 :: 		while(1) {                           //Main Endless Loop
L_main7:
;ATS 0.2.2.c,173 :: 		delay_ms(100);                     //delay for latency (To allow system
0x00E5	0x3082      	MOVLW      130
0x00E6	0x00CC      	MOVWF      R12
0x00E7	0x30DD      	MOVLW      221
0x00E8	0x00CD      	MOVWF      R13
L_main9:
0x00E9	0x0BCD      	DECFSZ     R13, 1
0x00EA	0x28E9      	GOTO       L_main9
0x00EB	0x0BCC      	DECFSZ     R12, 1
0x00EC	0x28E9      	GOTO       L_main9
0x00ED	0x0000      	NOP
0x00EE	0x0000      	NOP
;ATS 0.2.2.c,179 :: 		if (RBValue != 19)RBValue = PORTB & 0x07; //19 is the fallback value
0x00EF	0x080D      	MOVF       _RBValue, 0
0x00F0	0x3A13      	XORLW      19
0x00F1	0x1903      	BTFSC      STATUS, 2
0x00F2	0x28F7      	GOTO       L_main10
0x00F3	0x3007      	MOVLW      7
0x00F4	0x1283      	BCF        STATUS, 5
0x00F5	0x0506      	ANDWF      PORTB, 0
0x00F6	0x008D      	MOVWF      _RBValue
L_main10:
;ATS 0.2.2.c,182 :: 		if (!Run_flag && CoolDown_flag) RBValue = 19;     //it's time to cool down
0x00F7	0x188E      	BTFSC      _Run_Flag, BitPos(_Run_Flag+0)
0x00F8	0x28FD      	GOTO       L_main13
0x00F9	0x1C0E      	BTFSS      _CoolDown_Flag, BitPos(_CoolDown_Flag+0)
0x00FA	0x28FD      	GOTO       L_main13
L__main35:
0x00FB	0x3013      	MOVLW      19
0x00FC	0x008D      	MOVWF      _RBValue
L_main13:
;ATS 0.2.2.c,200 :: 		switch(RBValue) {
0x00FD	0x292B      	GOTO       L_main14
;ATS 0.2.2.c,203 :: 		case 4:                                 //Gen Auto Mode Selected
L_main16:
;ATS 0.2.2.c,204 :: 		Auto_Flag = 1;                     // Gen is in Auto Mode
0x00FE	0x150E      	BSF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,205 :: 		RBValue = 0;
0x00FF	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,206 :: 		if (Auto_Flag) Poll();             //call Auto Mode Routine Here
0x0100	0x1D0E      	BTFSS      _Auto_Flag, BitPos(_Auto_Flag+0)
0x0101	0x2903      	GOTO       L_main17
0x0102	0x205E      	CALL       _Poll
L_main17:
;ATS 0.2.2.c,207 :: 		break;
0x0103	0x293C      	GOTO       L_main15
;ATS 0.2.2.c,209 :: 		case 6:                                 //Gen Auto Mode Selected
L_main18:
;ATS 0.2.2.c,210 :: 		Auto_Flag = 1;                     // Gen is in Auto Mode
0x0104	0x150E      	BSF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,211 :: 		RBValue = 0;
0x0105	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,212 :: 		if (Auto_Flag) Poll();             //Call Auto Mode Routine Here
0x0106	0x1D0E      	BTFSS      _Auto_Flag, BitPos(_Auto_Flag+0)
0x0107	0x2909      	GOTO       L_main19
0x0108	0x205E      	CALL       _Poll
L_main19:
;ATS 0.2.2.c,213 :: 		break;
0x0109	0x293C      	GOTO       L_main15
;ATS 0.2.2.c,217 :: 		case 2:                                   //Start Button Pressed
L_main20:
0x010A	0x1283      	BCF        STATUS, 5
;ATS 0.2.2.c,218 :: 		Auto_Flag = 0;                     //Gen is in Manual Mode
0x010B	0x110E      	BCF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,219 :: 		GenStop = 1;                         //Turn Off GEN_OFF signal
0x010C	0x1606      	BSF        RB4_bit, 4
;ATS 0.2.2.c,220 :: 		GenOn = 1;
0x010D	0x1786      	BSF        RB7_bit, 7
;ATS 0.2.2.c,221 :: 		GenStart = 1;
0x010E	0x1706      	BSF        RB6_bit, 6
;ATS 0.2.2.c,222 :: 		Run_Flag = 1;
0x010F	0x148E      	BSF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,223 :: 		RBValue = 0;
0x0110	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,224 :: 		break;
0x0111	0x293C      	GOTO       L_main15
;ATS 0.2.2.c,228 :: 		case 0:
L_main21:
0x0112	0x1283      	BCF        STATUS, 5
;ATS 0.2.2.c,229 :: 		GenStart = 0;
0x0113	0x1306      	BCF        RB6_bit, 6
;ATS 0.2.2.c,230 :: 		Auto_Flag = 0;
0x0114	0x110E      	BCF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,231 :: 		RBValue = 0;
0x0115	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,232 :: 		break;
0x0116	0x293C      	GOTO       L_main15
;ATS 0.2.2.c,236 :: 		default:               //Any other Value Besides 2,4 and 6
L_main22:
;ATS 0.2.2.c,237 :: 		Auto_Flag = 0;
0x0117	0x110E      	BCF        _Auto_Flag, BitPos(_Auto_Flag+0)
;ATS 0.2.2.c,238 :: 		delay_ms(2000);  //wait 2 seconds before you check again
0x0118	0x300B      	MOVLW      11
0x0119	0x00CB      	MOVWF      R11
0x011A	0x3026      	MOVLW      38
0x011B	0x00CC      	MOVWF      R12
0x011C	0x305D      	MOVLW      93
0x011D	0x00CD      	MOVWF      R13
L_main23:
0x011E	0x1283      	BCF        STATUS, 5
0x011F	0x0BCD      	DECFSZ     R13, 1
0x0120	0x291E      	GOTO       L_main23
0x0121	0x0BCC      	DECFSZ     R12, 1
0x0122	0x291E      	GOTO       L_main23
0x0123	0x0BCB      	DECFSZ     R11, 1
0x0124	0x291E      	GOTO       L_main23
0x0125	0x0000      	NOP
0x0126	0x0000      	NOP
;ATS 0.2.2.c,239 :: 		PORTB = 0x00;    //Turn the Gen Off if none of the conditions are met
0x0127	0x0186      	CLRF       PORTB
;ATS 0.2.2.c,240 :: 		Run_Flag = 0;
0x0128	0x108E      	BCF        _Run_Flag, BitPos(_Run_Flag+0)
;ATS 0.2.2.c,241 :: 		RBValue = 0;
0x0129	0x018D      	CLRF       _RBValue
;ATS 0.2.2.c,242 :: 		break;         //We need an ERROR Condition Here
0x012A	0x293C      	GOTO       L_main15
;ATS 0.2.2.c,243 :: 		} //switch
L_main14:
0x012B	0x080D      	MOVF       _RBValue, 0
0x012C	0x3A04      	XORLW      4
0x012D	0x1903      	BTFSC      STATUS, 2
0x012E	0x28FE      	GOTO       L_main16
0x012F	0x080D      	MOVF       _RBValue, 0
0x0130	0x3A06      	XORLW      6
0x0131	0x1903      	BTFSC      STATUS, 2
0x0132	0x2904      	GOTO       L_main18
0x0133	0x080D      	MOVF       _RBValue, 0
0x0134	0x3A02      	XORLW      2
0x0135	0x1903      	BTFSC      STATUS, 2
0x0136	0x290A      	GOTO       L_main20
0x0137	0x080D      	MOVF       _RBValue, 0
0x0138	0x3A00      	XORLW      0
0x0139	0x1903      	BTFSC      STATUS, 2
0x013A	0x2912      	GOTO       L_main21
0x013B	0x2917      	GOTO       L_main22
L_main15:
;ATS 0.2.2.c,246 :: 		}//While
0x013C	0x28E5      	GOTO       L_main7
;ATS 0.2.2.c,248 :: 		}
0x013D	0x293D      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [84]    _interrupt
0x0058       [6]    _____DoICP
0x005E      [77]    _Poll
0x00AB      [12]    ___CC2DW
0x00B7     [135]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    NOT_PD_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    RP0_bit
0x0003       [0]    Z_bit
0x0003       [1]    STATUS
0x0003       [0]    C_bit
0x0003       [0]    DC_bit
0x0003       [0]    RP1_bit
0x0003       [0]    IRP_bit
0x0004       [1]    FSRPTR
0x0004       [1]    FSR
0x0005       [0]    ZESA
0x0005       [0]    SQOUT
0x0005       [0]    RA0_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA4_bit
0x0005       [0]    RA3_bit
0x0005       [1]    PORTA
0x0005       [0]    RA1_bit
0x0006       [0]    ChangeOver
0x0006       [0]    GenStart
0x0006       [0]    RB1_bit
0x0006       [0]    RB0_bit
0x0006       [1]    PORTB
0x0006       [0]    GenOn
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB5_bit
0x0006       [0]    GenStop
0x0006       [0]    RB4_bit
0x0008       [1]    EEDATA
0x0009       [1]    EEADR
0x000A       [1]    PCLATH
0x000B       [0]    EEIE_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    INTE_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    RBIF_bit
0x000B       [1]    INTCON
0x000B       [0]    T0IF_bit
0x000D       [1]    _RBValue
0x000E       [0]    _Auto_Flag
0x000E       [0]    _CoolDown_Flag
0x000E       [0]    _Run_Flag
0x000E       [0]    _GenFeedFlag
0x000F       [2]    ___DoICPAddr
0x0011       [2]    _CoolDownTimer
0x0013       [2]    _RunTime
0x0015       [2]    _CoolDownTime
0x0017       [2]    _RunTimer
0x0019       [2]    _RealTimer
0x001B       [2]    _ProgTimer
0x001D       [1]    ___saveSTATUS
0x001E       [1]    ___savePCLATH
0x0040       [1]    R0
0x0041       [1]    R1
0x0042       [1]    R2
0x0043       [1]    R3
0x0044       [1]    R4
0x0045       [1]    R5
0x0046       [1]    R6
0x0047       [1]    R7
0x0048       [1]    R8
0x0049       [1]    R9
0x004A       [1]    R10
0x004B       [1]    R11
0x004C       [1]    R12
0x004D       [1]    R13
0x004E       [1]    R14
0x004F       [1]    R15
0x0081       [0]    PS2_bit
0x0081       [0]    PSA_bit
0x0081       [0]    PS0_bit
0x0081       [0]    PS1_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    NOT_RBPU_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    T0CS_bit
0x0081       [0]    INTEDG_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA4_bit
0x0085       [0]    TRISA2_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA1_bit
0x0085       [1]    TRISA
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB2_bit
0x0086       [1]    TRISB
0x0088       [0]    WR_bit
0x0088       [0]    WRERR_bit
0x0088       [0]    WREN_bit
0x0088       [0]    RD_bit
0x0088       [1]    EECON1
0x0088       [0]    EEIF_bit
0x0089       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_Poll24
  L_Poll25
  L_Poll26
  L_Poll27
  L_Poll28
  L_Poll29
  L_Poll30
  L_Poll31
  L_Poll32
  L_Poll33
  L_Poll34
  L__main35
  L__Poll36
  _interrupt
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L__interrupt40
  _main
  _Poll
  _CC2D_Loop1
  _____DoICP
  _____DoIFC
  ___CC2DW
  _Swap
  L_interrupt0
  L_interrupt1
  L_interrupt2
  L_interrupt3
  L_interrupt4
  L_interrupt5
  L_interrupt6
  L_main7
  L_main8
  L_main9
  L_main10
  L_main11
  L_main12
  L_main13
  L_main14
  L_main15
  L_main16
  L_main17
  L_main18
  L_main19
  L_main20
  L_main21
  L_main22
  L_main23
  L_Poll24
  L_Poll25
  L_Poll26
  L_Poll27
  L_Poll28
  L_Poll29
  L_Poll30
  L_Poll31
  L_Poll32
  L_Poll33
  L_Poll34
  L__main35
  L__Poll36
  _interrupt
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L__interrupt40
  _main
  _Poll
